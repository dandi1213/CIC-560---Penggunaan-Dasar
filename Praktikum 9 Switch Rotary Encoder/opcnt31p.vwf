/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2006 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 1000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("bd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("extr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pa")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pb")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pclk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("scn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("scn[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "scn";
}

SIGNAL("scn[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "scn";
}

SIGNAL("scn[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "scn";
}

SIGNAL("scn[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "scn";
}

SIGNAL("scn[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "scn";
}

SIGNAL("scn[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "scn";
}

SIGNAL("scn[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "scn";
}

SIGNAL("scn[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "scn";
}

SIGNAL("seg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("seg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("sysclk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("oprul")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 28;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("oprul[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("oprul[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "oprul";
}

SIGNAL("f_r")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("bd")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 602220.0;
		LEVEL 1 FOR 397780.0;
	}
}

TRANSITION_LIST("clr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 1440.0;
		LEVEL 0 FOR 998400.0;
	}
}

TRANSITION_LIST("en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 999600.0;
	}
}

TRANSITION_LIST("extr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 286040.0;
		LEVEL 1 FOR 316235.0;
		LEVEL 0 FOR 219550.0;
		LEVEL 1 FOR 177025.0;
		LEVEL 0 FOR 1150.0;
	}
}

TRANSITION_LIST("pa")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 25000.0;
			LEVEL 1 FOR 25000.0;
		}
		LEVEL 0 FOR 25000.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 25000.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 25000.0;
			LEVEL 0 FOR 25000.0;
		}
		LEVEL 1 FOR 25000.0;
		LEVEL 0 FOR 23850.0;
		LEVEL 1 FOR 1150.0;
	}
}

TRANSITION_LIST("pb")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12500.0;
		LEVEL 1 FOR 25000.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 25000.0;
			LEVEL 1 FOR 25000.0;
		}
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 25000.0;
		LEVEL 0 FOR 25000.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 25000.0;
			LEVEL 0 FOR 25000.0;
		}
		LEVEL 1 FOR 11350.0;
		LEVEL 0 FOR 1150.0;
	}
}

TRANSITION_LIST("pclk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 200;
			LEVEL 0 FOR 2500.0;
			LEVEL 1 FOR 2500.0;
		}
	}
}

TRANSITION_LIST("scn[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5115.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 35840.0;
			LEVEL 1 FOR 5120.0;
		}
		LEVEL 0 FOR 11845.0;
	}
}

TRANSITION_LIST("scn[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5115.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 35840.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 6725.0;
	}
}

TRANSITION_LIST("scn[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10235.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 35840.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 1605.0;
	}
}

TRANSITION_LIST("scn[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15355.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 35840.0;
		}
		LEVEL 1 FOR 1605.0;
	}
}

TRANSITION_LIST("scn[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20475.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 35840.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 32325.0;
	}
}

TRANSITION_LIST("scn[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25595.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 35840.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 27205.0;
	}
}

TRANSITION_LIST("scn[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30715.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 35840.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 22085.0;
	}
}

TRANSITION_LIST("scn[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35835.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 35840.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 16965.0;
	}
}

TRANSITION_LIST("seg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35835.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10240.0;
			LEVEL 0 FOR 30720.0;
		}
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 25600.0;
		LEVEL 1 FOR 15360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30720.0;
			LEVEL 1 FOR 10240.0;
		}
		LEVEL 0 FOR 30720.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 76800.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 30720.0;
		LEVEL 1 FOR 5280.0;
		LEVEL 0 FOR 35680.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 30720.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 35840.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10240.0;
			LEVEL 0 FOR 30720.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 35840.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 2480.0;
		LEVEL 1 FOR 2640.0;
		LEVEL 0 FOR 30720.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 36400.0;
		LEVEL 1 FOR 4560.0;
		LEVEL 0 FOR 35840.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 16965.0;
	}
}

TRANSITION_LIST("seg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5115.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 10240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 35840.0;
			LEVEL 0 FOR 5120.0;
		}
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 5120.0;
		}
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 4960.0;
		LEVEL 0 FOR 5280.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 27800.0;
		LEVEL 0 FOR 2920.0;
		LEVEL 1 FOR 2080.0;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 10080.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 10240.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 5120.0;
		}
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 1520.0;
		LEVEL 0 FOR 8720.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 11845.0;
	}
}

TRANSITION_LIST("seg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5115.0;
		LEVEL 1 FOR 32430.0;
		LEVEL 0 FOR 8530.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 3830.0;
		LEVEL 0 FOR 6410.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5490.0;
		LEVEL 1 FOR 4750.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 34720.0;
		LEVEL 0 FOR 6240.0;
		LEVEL 1 FOR 33760.0;
		LEVEL 0 FOR 7200.0;
		LEVEL 1 FOR 27800.0;
		LEVEL 0 FOR 2920.0;
		LEVEL 1 FOR 2080.0;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 9120.0;
		LEVEL 1 FOR 30880.0;
		LEVEL 0 FOR 10080.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 9320.0;
		LEVEL 1 FOR 920.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 5120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 15360.0;
		}
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 9720.0;
		LEVEL 1 FOR 520.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 11845.0;
	}
}

TRANSITION_LIST("seg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5115.0;
		LEVEL 1 FOR 148480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 35840.0;
		}
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 76800.0;
		LEVEL 0 FOR 10080.0;
		LEVEL 1 FOR 82080.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 27800.0;
		LEVEL 0 FOR 2920.0;
		LEVEL 1 FOR 2080.0;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 30880.0;
		LEVEL 0 FOR 10080.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 35840.0;
			LEVEL 0 FOR 5120.0;
		}
		LEVEL 1 FOR 32650.0;
		LEVEL 0 FOR 8310.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 1520.0;
		LEVEL 1 FOR 3600.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 25600.0;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 5120.0;
		}
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 11845.0;
	}
}

TRANSITION_LIST("seg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 35835.0;
		LEVEL 0 FOR 1710.0;
		LEVEL 1 FOR 121170.0;
		LEVEL 0 FOR 3830.0;
		LEVEL 1 FOR 113930.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 117760.0;
		LEVEL 0 FOR 3040.0;
		LEVEL 1 FOR 114720.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 122880.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 194560.0;
		LEVEL 0 FOR 7600.0;
		LEVEL 1 FOR 33360.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 40960.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 45000.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 16965.0;
	}
}

TRANSITION_LIST("seg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 76795.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 117760.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 158720.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40800.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 76800.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 76800.0;
		LEVEL 0 FOR 1930.0;
		LEVEL 1 FOR 79990.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 76800.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 57925.0;
	}
}

TRANSITION_LIST("seg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5115.0;
		LEVEL 1 FOR 148480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 35840.0;
		}
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 76800.0;
		LEVEL 0 FOR 10080.0;
		LEVEL 1 FOR 82080.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 27800.0;
		LEVEL 0 FOR 2920.0;
		LEVEL 1 FOR 2080.0;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 35840.0;
		}
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 15360.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 35840.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 32650.0;
		LEVEL 0 FOR 8310.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 33200.0;
		LEVEL 0 FOR 7760.0;
		LEVEL 1 FOR 30720.0;
		LEVEL 0 FOR 1520.0;
		LEVEL 1 FOR 3600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 9680.0;
		LEVEL 1 FOR 25600.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 11845.0;
	}
}

TRANSITION_LIST("sysclk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("oprul[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("oprul[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 592515.0;
		LEVEL 1 FOR 45030.0;
		LEVEL 0 FOR 362455.0;
	}
}

TRANSITION_LIST("oprul[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250045.0;
		LEVEL 1 FOR 47470.0;
		LEVEL 0 FOR 195000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 45030.0;
		LEVEL 1 FOR 279970.0;
		LEVEL 0 FOR 82485.0;
	}
}

TRANSITION_LIST("oprul[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125045.0;
		LEVEL 1 FOR 125000.0;
		LEVEL 0 FOR 47470.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 95000.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 45030.0;
		LEVEL 1 FOR 199970.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 2485.0;
	}
}

TRANSITION_LIST("oprul[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100045.0;
		LEVEL 1 FOR 25000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 25000.0;
		LEVEL 0 FOR 47470.0;
		LEVEL 1 FOR 10000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 10000.0;
		LEVEL 0 FOR 75000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 40000.0;
		}
		LEVEL 1 FOR 10000.0;
		LEVEL 0 FOR 45030.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 99970.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40000.0;
			LEVEL 0 FOR 40000.0;
		}
		LEVEL 1 FOR 2485.0;
	}
}

TRANSITION_LIST("oprul[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50045.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 75000.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 82470.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 30000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 35000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20000.0;
			LEVEL 0 FOR 30000.0;
		}
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 55030.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 49970.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20000.0;
			LEVEL 0 FOR 20000.0;
		}
		LEVEL 1 FOR 2485.0;
	}
}

TRANSITION_LIST("oprul[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25045.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 25000.0;
			LEVEL 0 FOR 25000.0;
			LEVEL 1 FOR 25000.0;
			LEVEL 0 FOR 50000.0;
		}
		LEVEL 1 FOR 12470.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 10000.0;
		}
		LEVEL 0 FOR 15000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 20000.0;
		}
		LEVEL 1 FOR 10000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 10000.0;
		LEVEL 0 FOR 55030.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 25000.0;
			LEVEL 0 FOR 25000.0;
		}
		LEVEL 1 FOR 25000.0;
		LEVEL 0 FOR 9970.0;
		LEVEL 1 FOR 5000.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 10000.0;
		}
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 2485.0;
	}
}

TRANSITION_LIST("oprul[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12545.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 12500.0;
			LEVEL 0 FOR 12500.0;
		}
		LEVEL 1 FOR 12500.0;
		LEVEL 0 FOR 12470.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
		}
		LEVEL 1 FOR 27530.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 12500.0;
			LEVEL 1 FOR 12500.0;
		}
		LEVEL 0 FOR 12500.0;
		LEVEL 1 FOR 9970.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
		}
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 2485.0;
	}
}

TRANSITION_LIST("f_r")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 823815.0;
		LEVEL 1 FOR 175035.0;
		LEVEL 0 FOR 1150.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "sysclk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "extr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "f_r";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pa";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pb";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pclk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "oprul";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "oprul[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "scn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "scn[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "scn[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "scn[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "scn[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "scn[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "scn[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "scn[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "scn[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "seg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "seg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "seg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "seg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "seg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "seg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "seg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "seg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 47;
}

TIME_BAR
{
	TIME = 130921;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 4805274;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 15520000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 1000000000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 1000000000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 1000000000;
	MASTER = FALSE;
}
;
