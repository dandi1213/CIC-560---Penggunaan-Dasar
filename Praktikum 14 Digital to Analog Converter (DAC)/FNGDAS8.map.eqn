-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--sum[15] is sum[15]
--operation mode is normal

sum[15]_carry_eqn = A1L831;
sum[15]_lut_out = A1L29 $ sum[15] $ sum[15]_carry_eqn;
sum[15] = DFFEAS(sum[15]_lut_out, cnt[6], VCC, , , , , , );


--co is co
--operation mode is normal

co_lut_out = sum[15];
co = DFFEAS(co_lut_out, cnt[6], VCC, , , , , , );


--cnt[6] is cnt[6]
--operation mode is arithmetic

cnt[6]_carry_eqn = A1L13;
cnt[6]_lut_out = cnt[6] $ (!cnt[6]_carry_eqn);
cnt[6] = DFFEAS(cnt[6]_lut_out, clock, VCC, , , , , , );

--A1L33 is cnt[6]~197
--operation mode is arithmetic

A1L33 = CARRY(cnt[6] & (!A1L13));


--A1L65 is cout~1
--operation mode is normal

A1L65 = !cnt[6] & (sum[15] $ co);


--cnt[5] is cnt[5]
--operation mode is arithmetic

cnt[5]_carry_eqn = A1L92;
cnt[5]_lut_out = cnt[5] $ (cnt[5]_carry_eqn);
cnt[5] = DFFEAS(cnt[5]_lut_out, clock, VCC, , , , , , );

--A1L13 is cnt[5]~201
--operation mode is arithmetic

A1L13 = CARRY(!A1L92 # !cnt[5]);


--strb is strb
--operation mode is normal

strb = cnt[6] & cnt[5];


--A1L85 is cs~22
--operation mode is normal

A1L85 = a[0] & (!a[2] & !a[1]);


--HB1_q_a[0] is altsyncram:prom|altsyncram_mam2:auto_generated|q_a[0]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 8
--Port A Input: Registered, Port A Output: Un-registered
HB1_q_a[0]_PORT_A_address = BUS(sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], frqm[0], frqm[1]);
HB1_q_a[0]_PORT_A_address_reg = DFFE(HB1_q_a[0]_PORT_A_address, HB1_q_a[0]_clock_0, , , );
HB1_q_a[0]_clock_0 = clock;
HB1_q_a[0]_PORT_A_data_out = MEMORY(, , HB1_q_a[0]_PORT_A_address_reg, , , , , , HB1_q_a[0]_clock_0, , , , , );
HB1_q_a[0] = HB1_q_a[0]_PORT_A_data_out[0];


--HB1_q_a[1] is altsyncram:prom|altsyncram_mam2:auto_generated|q_a[1]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 8
--Port A Input: Registered, Port A Output: Un-registered
HB1_q_a[1]_PORT_A_address = BUS(sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], frqm[0], frqm[1]);
HB1_q_a[1]_PORT_A_address_reg = DFFE(HB1_q_a[1]_PORT_A_address, HB1_q_a[1]_clock_0, , , );
HB1_q_a[1]_clock_0 = clock;
HB1_q_a[1]_PORT_A_data_out = MEMORY(, , HB1_q_a[1]_PORT_A_address_reg, , , , , , HB1_q_a[1]_clock_0, , , , , );
HB1_q_a[1] = HB1_q_a[1]_PORT_A_data_out[0];


--HB1_q_a[2] is altsyncram:prom|altsyncram_mam2:auto_generated|q_a[2]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 8
--Port A Input: Registered, Port A Output: Un-registered
HB1_q_a[2]_PORT_A_address = BUS(sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], frqm[0], frqm[1]);
HB1_q_a[2]_PORT_A_address_reg = DFFE(HB1_q_a[2]_PORT_A_address, HB1_q_a[2]_clock_0, , , );
HB1_q_a[2]_clock_0 = clock;
HB1_q_a[2]_PORT_A_data_out = MEMORY(, , HB1_q_a[2]_PORT_A_address_reg, , , , , , HB1_q_a[2]_clock_0, , , , , );
HB1_q_a[2] = HB1_q_a[2]_PORT_A_data_out[0];


--HB1_q_a[3] is altsyncram:prom|altsyncram_mam2:auto_generated|q_a[3]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 8
--Port A Input: Registered, Port A Output: Un-registered
HB1_q_a[3]_PORT_A_address = BUS(sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], frqm[0], frqm[1]);
HB1_q_a[3]_PORT_A_address_reg = DFFE(HB1_q_a[3]_PORT_A_address, HB1_q_a[3]_clock_0, , , );
HB1_q_a[3]_clock_0 = clock;
HB1_q_a[3]_PORT_A_data_out = MEMORY(, , HB1_q_a[3]_PORT_A_address_reg, , , , , , HB1_q_a[3]_clock_0, , , , , );
HB1_q_a[3] = HB1_q_a[3]_PORT_A_data_out[0];


--HB1_q_a[4] is altsyncram:prom|altsyncram_mam2:auto_generated|q_a[4]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 8
--Port A Input: Registered, Port A Output: Un-registered
HB1_q_a[4]_PORT_A_address = BUS(sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], frqm[0], frqm[1]);
HB1_q_a[4]_PORT_A_address_reg = DFFE(HB1_q_a[4]_PORT_A_address, HB1_q_a[4]_clock_0, , , );
HB1_q_a[4]_clock_0 = clock;
HB1_q_a[4]_PORT_A_data_out = MEMORY(, , HB1_q_a[4]_PORT_A_address_reg, , , , , , HB1_q_a[4]_clock_0, , , , , );
HB1_q_a[4] = HB1_q_a[4]_PORT_A_data_out[0];


--HB1_q_a[5] is altsyncram:prom|altsyncram_mam2:auto_generated|q_a[5]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 8
--Port A Input: Registered, Port A Output: Un-registered
HB1_q_a[5]_PORT_A_address = BUS(sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], frqm[0], frqm[1]);
HB1_q_a[5]_PORT_A_address_reg = DFFE(HB1_q_a[5]_PORT_A_address, HB1_q_a[5]_clock_0, , , );
HB1_q_a[5]_clock_0 = clock;
HB1_q_a[5]_PORT_A_data_out = MEMORY(, , HB1_q_a[5]_PORT_A_address_reg, , , , , , HB1_q_a[5]_clock_0, , , , , );
HB1_q_a[5] = HB1_q_a[5]_PORT_A_data_out[0];


--HB1_q_a[6] is altsyncram:prom|altsyncram_mam2:auto_generated|q_a[6]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 8
--Port A Input: Registered, Port A Output: Un-registered
HB1_q_a[6]_PORT_A_address = BUS(sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], frqm[0], frqm[1]);
HB1_q_a[6]_PORT_A_address_reg = DFFE(HB1_q_a[6]_PORT_A_address, HB1_q_a[6]_clock_0, , , );
HB1_q_a[6]_clock_0 = clock;
HB1_q_a[6]_PORT_A_data_out = MEMORY(, , HB1_q_a[6]_PORT_A_address_reg, , , , , , HB1_q_a[6]_clock_0, , , , , );
HB1_q_a[6] = HB1_q_a[6]_PORT_A_data_out[0];


--HB1_q_a[7] is altsyncram:prom|altsyncram_mam2:auto_generated|q_a[7]
--RAM Block Operation Mode: ROM
--Port A Depth: 256, Port A Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 8
--Port A Input: Registered, Port A Output: Un-registered
HB1_q_a[7]_PORT_A_address = BUS(sum[10], sum[11], sum[12], sum[13], sum[14], sum[15], frqm[0], frqm[1]);
HB1_q_a[7]_PORT_A_address_reg = DFFE(HB1_q_a[7]_PORT_A_address, HB1_q_a[7]_clock_0, , , );
HB1_q_a[7]_clock_0 = clock;
HB1_q_a[7]_PORT_A_data_out = MEMORY(, , HB1_q_a[7]_PORT_A_address_reg, , , , , , HB1_q_a[7]_clock_0, , , , , );
HB1_q_a[7] = HB1_q_a[7]_PORT_A_data_out[0];


--A1L01 is altera_internal_jtag~TDO
A1L01 = STRATIX_ELA(altera_reserved_tms, altera_reserved_tck, altera_reserved_tdi, , , !D1_hub_tdo);

--A1L11 is altera_internal_jtag~TMSUTAP
A1L11 = STRATIX_ELA(altera_reserved_tms, altera_reserved_tck, altera_reserved_tdi, , , !D1_hub_tdo);

--A1L9 is altera_internal_jtag~TCKUTAP
A1L9 = STRATIX_ELA(altera_reserved_tms, altera_reserved_tck, altera_reserved_tdi, , , !D1_hub_tdo);

--altera_internal_jtag is altera_internal_jtag
altera_internal_jtag = STRATIX_ELA(altera_reserved_tms, altera_reserved_tck, altera_reserved_tdi, , , !D1_hub_tdo);


--A1L29 is freqs[15]~120
--operation mode is normal

A1L29 = freq[15] & (!sweep);


--sum[14] is sum[14]
--operation mode is arithmetic

sum[14]_carry_eqn = A1L631;
sum[14]_lut_out = A1L19 $ sum[14] $ !sum[14]_carry_eqn;
sum[14] = DFFEAS(sum[14]_lut_out, cnt[6], VCC, , , , , , );

--A1L831 is sum[14]~117
--operation mode is arithmetic

A1L831 = CARRY(A1L19 & (sum[14] # !A1L631) # !A1L19 & sum[14] & !A1L631);


--cnt[4] is cnt[4]
--operation mode is arithmetic

cnt[4]_carry_eqn = A1L72;
cnt[4]_lut_out = cnt[4] $ (!cnt[4]_carry_eqn);
cnt[4] = DFFEAS(cnt[4]_lut_out, clock, VCC, , , , , , );

--A1L92 is cnt[4]~205
--operation mode is arithmetic

A1L92 = CARRY(cnt[4] & (!A1L72));


--sum[10] is sum[10]
--operation mode is arithmetic

sum[10]_carry_eqn = A1L821;
sum[10]_lut_out = A1L78 $ sum[10] $ !sum[10]_carry_eqn;
sum[10] = DFFEAS(sum[10]_lut_out, cnt[6], VCC, , , , , , );

--A1L031 is sum[10]~121
--operation mode is arithmetic

A1L031 = CARRY(A1L78 & (sum[10] # !A1L821) # !A1L78 & sum[10] & !A1L821);


--sum[11] is sum[11]
--operation mode is arithmetic

sum[11]_carry_eqn = A1L031;
sum[11]_lut_out = A1L88 $ sum[11] $ sum[11]_carry_eqn;
sum[11] = DFFEAS(sum[11]_lut_out, cnt[6], VCC, , , , , , );

--A1L231 is sum[11]~125
--operation mode is arithmetic

A1L231 = CARRY(A1L88 & !sum[11] & !A1L031 # !A1L88 & (!A1L031 # !sum[11]));


--sum[12] is sum[12]
--operation mode is arithmetic

sum[12]_carry_eqn = A1L231;
sum[12]_lut_out = A1L98 $ sum[12] $ !sum[12]_carry_eqn;
sum[12] = DFFEAS(sum[12]_lut_out, cnt[6], VCC, , , , , , );

--A1L431 is sum[12]~129
--operation mode is arithmetic

A1L431 = CARRY(A1L98 & (sum[12] # !A1L231) # !A1L98 & sum[12] & !A1L231);


--sum[13] is sum[13]
--operation mode is arithmetic

sum[13]_carry_eqn = A1L431;
sum[13]_lut_out = A1L09 $ sum[13] $ sum[13]_carry_eqn;
sum[13] = DFFEAS(sum[13]_lut_out, cnt[6], VCC, , , , , , );

--A1L631 is sum[13]~133
--operation mode is arithmetic

A1L631 = CARRY(A1L09 & !sum[13] & !A1L431 # !A1L09 & (!A1L431 # !sum[13]));


--D1_hub_tdo is sld_hub:sld_hub_inst|hub_tdo
--operation mode is normal

D1_hub_tdo = AMPP_FUNCTION(!A1L9, D1L31, D1L51, D1L71, D1L91, !LB1_state[8], LB1L81);


--A1L19 is freqs[14]~121
--operation mode is normal

A1L19 = freq[14] & (!sweep);


--cnt[3] is cnt[3]
--operation mode is arithmetic

cnt[3]_carry_eqn = A1L52;
cnt[3]_lut_out = cnt[3] $ (cnt[3]_carry_eqn);
cnt[3] = DFFEAS(cnt[3]_lut_out, clock, VCC, , , , , , );

--A1L72 is cnt[3]~209
--operation mode is arithmetic

A1L72 = CARRY(!A1L52 # !cnt[3]);


--cnt[16] is cnt[16]
--operation mode is arithmetic

cnt[16]_carry_eqn = A1L15;
cnt[16]_lut_out = cnt[16] $ (!cnt[16]_carry_eqn);
cnt[16] = DFFEAS(cnt[16]_lut_out, clock, VCC, , , , , , );

--A1L35 is cnt[16]~213
--operation mode is arithmetic

A1L35 = CARRY(cnt[16] & (!A1L15));


--A1L78 is freqs[10]~122
--operation mode is normal

A1L78 = sweep & cnt[16] # !sweep & (freq[10]);


--sum[9] is sum[9]
--operation mode is arithmetic

sum[9]_carry_eqn = A1L621;
sum[9]_lut_out = A1L68 $ sum[9] $ sum[9]_carry_eqn;
sum[9] = DFFEAS(sum[9]_lut_out, cnt[6], VCC, , , , , , );

--A1L821 is sum[9]~137
--operation mode is arithmetic

A1L821 = CARRY(A1L68 & !sum[9] & !A1L621 # !A1L68 & (!A1L621 # !sum[9]));


--cnt[17] is cnt[17]
--operation mode is normal

cnt[17]_carry_eqn = A1L35;
cnt[17]_lut_out = cnt[17] $ (cnt[17]_carry_eqn);
cnt[17] = DFFEAS(cnt[17]_lut_out, clock, VCC, , , , , , );


--A1L88 is freqs[11]~123
--operation mode is normal

A1L88 = sweep & cnt[17] # !sweep & (freq[11]);


--A1L98 is freqs[12]~124
--operation mode is normal

A1L98 = freq[12] & (!sweep);


--A1L09 is freqs[13]~125
--operation mode is normal

A1L09 = freq[13] & (!sweep);


--JB4_Q[0] is sld_hub:sld_hub_inst|sld_dffex:IRF_ENA|Q[0]
--operation mode is normal

JB4_Q[0] = AMPP_FUNCTION(A1L9, altera_internal_jtag, !D1L2, D1L02);


--JB1_Q[3] is sld_hub:sld_hub_inst|sld_dffex:\GEN_IRF:1:IRF|Q[3]
--operation mode is normal

JB1_Q[3] = AMPP_FUNCTION(A1L9, JB2_Q[3], JB6_Q[3], JB3_Q[0], !D1L2, D1L22);


--JB1_Q[5] is sld_hub:sld_hub_inst|sld_dffex:\GEN_IRF:1:IRF|Q[5]
--operation mode is normal

JB1_Q[5] = AMPP_FUNCTION(A1L9, JB2_Q[5], JB6_Q[5], JB3_Q[0], !D1L2, D1L22);


--D1_jtag_debug_mode_usr1 is sld_hub:sld_hub_inst|jtag_debug_mode_usr1
--operation mode is normal

D1_jtag_debug_mode_usr1 = AMPP_FUNCTION(A1L9, K5_dffs[0], K5_dffs[1], D1L53, D1L63, LB1_state[0], LB1_state[12]);


--JB1_Q[4] is sld_hub:sld_hub_inst|sld_dffex:\GEN_IRF:1:IRF|Q[4]
--operation mode is normal

JB1_Q[4] = AMPP_FUNCTION(A1L9, JB2_Q[4], JB6_Q[4], JB3_Q[0], !D1L2, D1L22);


--B1_bypass_reg_out is sld_signaltap:FNGDA8_signaltap2|bypass_reg_out
--operation mode is normal

B1_bypass_reg_out = AMPP_FUNCTION(A1L9, altera_internal_jtag, !B1_reset_all, D1L23);


--D1L21 is sld_hub:sld_hub_inst|hub_tdo~275
--operation mode is normal

D1L21 = AMPP_FUNCTION(D1_jtag_debug_mode_usr1, JB1_Q[4], B1_bypass_reg_out);


--D1L31 is sld_hub:sld_hub_inst|hub_tdo~276
--operation mode is normal

D1L31 = AMPP_FUNCTION(JB4_Q[0], JB1_Q[3], JB1_Q[5], D1L21);


--JB5_Q[0] is sld_hub:sld_hub_inst|sld_dffex:IRF_ENA_0|Q[0]
--operation mode is normal

JB5_Q[0] = AMPP_FUNCTION(A1L9, altera_internal_jtag, VCC, D1L02);


--F2_WORD_SR[0] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR[0]
--operation mode is normal

F2_WORD_SR[0] = AMPP_FUNCTION(A1L9, F2L32, F2L42, F2_WORD_SR[1], F2_word_counter[0], !F1_clear_signal, LB1_state[4], D1L4);


--D1_HUB_BYPASS_REG is sld_hub:sld_hub_inst|HUB_BYPASS_REG
--operation mode is normal

D1_HUB_BYPASS_REG = AMPP_FUNCTION(A1L9, D1L01, VCC);


--MB1_dffe1a[0] is sld_hub:sld_hub_inst|lpm_decode:instruction_decoder|decode_9ie:auto_generated|dffe1a[0]
--operation mode is normal

MB1_dffe1a[0] = AMPP_FUNCTION(A1L9, D1L03, JB6_Q[3], JB6_Q[2], JB6_Q[1], !D1L2, D1L6);


--D1L41 is sld_hub:sld_hub_inst|hub_tdo~277
--operation mode is normal

D1L41 = AMPP_FUNCTION(F2_WORD_SR[0], D1_HUB_BYPASS_REG, MB1_dffe1a[0], D1_jtag_debug_mode_usr1);


--D1L51 is sld_hub:sld_hub_inst|hub_tdo~278
--operation mode is normal

D1L51 = AMPP_FUNCTION(JB5_Q[0], D1L41);


--K1_dffs[0] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[0]
--operation mode is normal

K1_dffs[0] = AMPP_FUNCTION(A1L9, K1_dffs[1], H1_is_buffer_wrapped_once, B1L65, !B1_reset_all);


--K3_dffs[0] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[0]
--operation mode is normal

K3_dffs[0] = AMPP_FUNCTION(A1L9, K3_dffs[1], !B1_reset_all, G1_trigger_setup_ena);


--D1L61 is sld_hub:sld_hub_inst|hub_tdo~279
--operation mode is normal

D1L61 = AMPP_FUNCTION(JB1_Q[4], K1_dffs[0], JB1_Q[3], K3_dffs[0]);


--D1L71 is sld_hub:sld_hub_inst|hub_tdo~280
--operation mode is normal

D1L71 = AMPP_FUNCTION(JB4_Q[0], D1_jtag_debug_mode_usr1, D1L61);


--JB6_Q[0] is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[0]
--operation mode is normal

JB6_Q[0] = AMPP_FUNCTION(A1L9, JB6_Q[1], G1L2, LB1_state[4], !D1L2, JB6L4);


--F1_WORD_SR[0] is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|WORD_SR[0]
--operation mode is normal

F1_WORD_SR[0] = AMPP_FUNCTION(A1L9, F1L61, F1L2, F1_WORD_SR[1], F1_word_counter[2], !F1_clear_signal, LB1_state[4], B1L94);


--D1L81 is sld_hub:sld_hub_inst|hub_tdo~281
--operation mode is normal

D1L81 = AMPP_FUNCTION(JB4_Q[0], F1_WORD_SR[0], JB1_Q[5]);


--D1L91 is sld_hub:sld_hub_inst|hub_tdo~282
--operation mode is normal

D1L91 = AMPP_FUNCTION(D1_jtag_debug_mode_usr1, JB6_Q[0], D1L81);


--LB1_state[8] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[8]
--operation mode is normal

LB1_state[8] = AMPP_FUNCTION(A1L9, LB1_state[7], LB1_state[5], VCC, !A1L11);


--LB1_state[4] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[4]
--operation mode is normal

LB1_state[4] = AMPP_FUNCTION(A1L9, LB1_state[7], LB1_state[3], LB1_state[4], VCC, A1L11);


--LB1_state[3] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[3]
--operation mode is normal

LB1_state[3] = AMPP_FUNCTION(A1L9, LB1_state[2], A1L11, VCC);


--LB1L81 is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state~13
--operation mode is normal

LB1L81 = AMPP_FUNCTION(LB1_state[4], LB1_state[3]);


--cnt[2] is cnt[2]
--operation mode is arithmetic

cnt[2]_carry_eqn = A1L32;
cnt[2]_lut_out = cnt[2] $ (!cnt[2]_carry_eqn);
cnt[2] = DFFEAS(cnt[2]_lut_out, clock, VCC, , , , , , );

--A1L52 is cnt[2]~221
--operation mode is arithmetic

A1L52 = CARRY(cnt[2] & (!A1L32));


--cnt[15] is cnt[15]
--operation mode is arithmetic

cnt[15]_carry_eqn = A1L94;
cnt[15]_lut_out = cnt[15] $ (cnt[15]_carry_eqn);
cnt[15] = DFFEAS(cnt[15]_lut_out, clock, VCC, , , , , , );

--A1L15 is cnt[15]~225
--operation mode is arithmetic

A1L15 = CARRY(!A1L94 # !cnt[15]);


--A1L68 is freqs[9]~126
--operation mode is normal

A1L68 = sweep & cnt[15] # !sweep & (freq[9]);


--sum[8] is sum[8]
--operation mode is arithmetic

sum[8]_carry_eqn = A1L421;
sum[8]_lut_out = A1L58 $ sum[8] $ !sum[8]_carry_eqn;
sum[8] = DFFEAS(sum[8]_lut_out, cnt[6], VCC, , , , , , );

--A1L621 is sum[8]~141
--operation mode is arithmetic

A1L621 = CARRY(A1L58 & (sum[8] # !A1L421) # !A1L58 & sum[8] & !A1L421);


--LB1_state[1] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[1]
--operation mode is normal

LB1_state[1] = AMPP_FUNCTION(A1L9, LB1_state[0], LB1_state[8], LB1_state[1], LB1_state[15], VCC, A1L11);


--JB7_Q[0] is sld_hub:sld_hub_inst|sld_dffex:RESET|Q[0]
--operation mode is normal

JB7_Q[0] = AMPP_FUNCTION(A1L9, MB1_dffe1a[7], D1_jtag_debug_mode_usr1, D1L3);


--D1L2 is sld_hub:sld_hub_inst|CLEAR_SIGNAL~0
--operation mode is normal

D1L2 = AMPP_FUNCTION(LB1_state[1], JB7_Q[0]);


--D1_OK_TO_UPDATE_IR_Q is sld_hub:sld_hub_inst|OK_TO_UPDATE_IR_Q
--operation mode is normal

D1_OK_TO_UPDATE_IR_Q = AMPP_FUNCTION(A1L9, D1_jtag_debug_mode_usr1, LB1_state[8], VCC, D1L43);


--D1L02 is sld_hub:sld_hub_inst|IRF_ENA_ENABLE~21
--operation mode is normal

D1L02 = AMPP_FUNCTION(A1L11, LB1_state[4], D1_jtag_debug_mode_usr1, D1_OK_TO_UPDATE_IR_Q);


--JB2_Q[3] is sld_hub:sld_hub_inst|sld_dffex:\GEN_SHADOW_IRF:1:S_IRF|Q[3]
--operation mode is normal

JB2_Q[3] = AMPP_FUNCTION(A1L9, JB6_Q[3], !D1L2, D1L8);


--JB6_Q[3] is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[3]
--operation mode is normal

JB6_Q[3] = AMPP_FUNCTION(A1L9, D1L52, JB6_Q[4], V1L31, LB1_state[4], !D1L2, JB6L4);


--JB3_Q[0] is sld_hub:sld_hub_inst|sld_dffex:BROADCAST|Q[0]
--operation mode is normal

JB3_Q[0] = AMPP_FUNCTION(A1L9, MB1_dffe1a[1], !D1L2, D1L1);


--MB1_dffe1a[2] is sld_hub:sld_hub_inst|lpm_decode:instruction_decoder|decode_9ie:auto_generated|dffe1a[2]
--operation mode is normal

MB1_dffe1a[2] = AMPP_FUNCTION(A1L9, JB6_Q[2], D1L03, JB6_Q[3], JB6_Q[1], !D1L2, D1L6);


--D1L12 is sld_hub:sld_hub_inst|IRF_ENABLE[1]~76
--operation mode is normal

D1L12 = AMPP_FUNCTION(JB5_Q[0], MB1_dffe1a[2], JB4_Q[0], JB3_Q[0]);


--LB1_state[5] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[5]
--operation mode is normal

LB1_state[5] = AMPP_FUNCTION(A1L9, A1L11, LB1_state[4], LB1_state[3], VCC);


--D1L22 is sld_hub:sld_hub_inst|IRF_ENABLE[1]~77
--operation mode is normal

D1L22 = AMPP_FUNCTION(D1_OK_TO_UPDATE_IR_Q, D1L12, LB1_state[5]);


--JB2_Q[5] is sld_hub:sld_hub_inst|sld_dffex:\GEN_SHADOW_IRF:1:S_IRF|Q[5]
--operation mode is normal

JB2_Q[5] = AMPP_FUNCTION(A1L9, JB6_Q[5], !D1L2, D1L8);


--JB6_Q[5] is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[5]
--operation mode is normal

JB6_Q[5] = AMPP_FUNCTION(A1L9, LB1_state[4], JB6_Q[6], !D1L2, JB6L4);


--K5_dffs[0] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[0]
--operation mode is normal

K5_dffs[0] = AMPP_FUNCTION(A1L9, K5_dffs[1], LB1_state[0], LB1_state[11]);


--K5_dffs[1] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[1]
--operation mode is normal

K5_dffs[1] = AMPP_FUNCTION(A1L9, K5_dffs[2], LB1_state[0], LB1_state[11]);


--K5_dffs[9] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[9]
--operation mode is normal

K5_dffs[9] = AMPP_FUNCTION(A1L9, altera_internal_jtag, LB1_state[0], LB1_state[11]);


--K5_dffs[8] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[8]
--operation mode is normal

K5_dffs[8] = AMPP_FUNCTION(A1L9, K5_dffs[9], LB1_state[0], LB1_state[11]);


--K5_dffs[7] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[7]
--operation mode is normal

K5_dffs[7] = AMPP_FUNCTION(A1L9, K5_dffs[8], LB1_state[0], LB1_state[11]);


--K5_dffs[6] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[6]
--operation mode is normal

K5_dffs[6] = AMPP_FUNCTION(A1L9, K5_dffs[7], LB1_state[0], LB1_state[11]);


--D1L53 is sld_hub:sld_hub_inst|reduce_nor~56
--operation mode is normal

D1L53 = AMPP_FUNCTION(K5_dffs[9], K5_dffs[8], K5_dffs[7], K5_dffs[6]);


--K5_dffs[3] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[3]
--operation mode is normal

K5_dffs[3] = AMPP_FUNCTION(A1L9, K5_dffs[4], LB1_state[0], LB1_state[11]);


--K5_dffs[2] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[2]
--operation mode is normal

K5_dffs[2] = AMPP_FUNCTION(A1L9, K5_dffs[3], LB1_state[0], LB1_state[11]);


--K5_dffs[5] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[5]
--operation mode is normal

K5_dffs[5] = AMPP_FUNCTION(A1L9, K5_dffs[6], LB1_state[0], LB1_state[11]);


--K5_dffs[4] is sld_hub:sld_hub_inst|lpm_shiftreg:jtag_ir_register|dffs[4]
--operation mode is normal

K5_dffs[4] = AMPP_FUNCTION(A1L9, K5_dffs[5], LB1_state[0], LB1_state[11]);


--D1L63 is sld_hub:sld_hub_inst|reduce_nor~57
--operation mode is normal

D1L63 = AMPP_FUNCTION(K5_dffs[3], K5_dffs[2], K5_dffs[5], K5_dffs[4]);


--LB1_state[0] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[0]
--operation mode is normal

LB1_state[0] = AMPP_FUNCTION(A1L9, A1L11, LB1_state[9], LB1L91, LB1_state[0], VCC);


--LB1_state[12] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[12]
--operation mode is normal

LB1_state[12] = AMPP_FUNCTION(A1L9, LB1_state[11], LB1_state[10], VCC, !A1L11);


--JB2_Q[4] is sld_hub:sld_hub_inst|sld_dffex:\GEN_SHADOW_IRF:1:S_IRF|Q[4]
--operation mode is normal

JB2_Q[4] = AMPP_FUNCTION(A1L9, JB6_Q[4], !D1L2, D1L8);


--JB6_Q[4] is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[4]
--operation mode is normal

JB6_Q[4] = AMPP_FUNCTION(A1L9, JB6_Q[5], V1L6, V1L31, LB1_state[4], !D1L2, JB6L4);


--JB1_Q[0] is sld_hub:sld_hub_inst|sld_dffex:\GEN_IRF:1:IRF|Q[0]
--operation mode is normal

JB1_Q[0] = AMPP_FUNCTION(A1L9, JB2_Q[0], JB6_Q[0], JB3_Q[0], !D1L2, D1L22);


--B1_reset_all is sld_signaltap:FNGDA8_signaltap2|reset_all
--operation mode is normal

B1_reset_all = AMPP_FUNCTION(JB1_Q[0], LB1_state[1], JB7_Q[0]);


--D1_jtag_debug_mode is sld_hub:sld_hub_inst|jtag_debug_mode
--operation mode is normal

D1_jtag_debug_mode = AMPP_FUNCTION(A1L9, D1L03, D1_jtag_debug_mode, D1L13, LB1_state[15], LB1_state[0]);


--D1L23 is sld_hub:sld_hub_inst|node_ena~18
--operation mode is normal

D1L23 = AMPP_FUNCTION(JB4_Q[0], D1_jtag_debug_mode, JB3_Q[0]);


--F2_word_counter[4] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|word_counter[4]
--operation mode is normal

F2_word_counter[4] = AMPP_FUNCTION(A1L9, F2_word_counter[4], F2L01, F2_word_counter[0], F2L1, !F1_clear_signal, F2L31);


--F2_word_counter[1] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|word_counter[1]
--operation mode is normal

F2_word_counter[1] = AMPP_FUNCTION(A1L9, F2L2, !F1_clear_signal, F2L31);


--F2_word_counter[2] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|word_counter[2]
--operation mode is normal

F2_word_counter[2] = AMPP_FUNCTION(A1L9, F2L4, !F1_clear_signal, F2L31);


--F2_word_counter[3] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|word_counter[3]
--operation mode is normal

F2_word_counter[3] = AMPP_FUNCTION(A1L9, F2L6, !F1_clear_signal, F2L31);


--F2L32 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR~137
--operation mode is normal

F2L32 = AMPP_FUNCTION(F2_word_counter[4], F2_word_counter[1], F2_word_counter[2], F2_word_counter[3]);


--F2L42 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR~138
--operation mode is normal

F2L42 = AMPP_FUNCTION(F2_word_counter[1], F2_word_counter[2], F2_word_counter[3]);


--F2_WORD_SR[1] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR[1]
--operation mode is normal

F2_WORD_SR[1] = AMPP_FUNCTION(A1L9, F2L52, F2L62, F2_WORD_SR[2], F2_word_counter[0], !F1_clear_signal, LB1_state[4], D1L4);


--F2_word_counter[0] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|word_counter[0]
--operation mode is normal

F2_word_counter[0] = AMPP_FUNCTION(A1L9, F2_word_counter[4], F2L01, F2_word_counter[0], F2L8, !F1_clear_signal, F2L31);


--F1_clear_signal is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|clear_signal
--operation mode is normal

F1_clear_signal = AMPP_FUNCTION(LB1_state[8], D1_jtag_debug_mode_usr1);


--D1_jtag_debug_mode_usr0 is sld_hub:sld_hub_inst|jtag_debug_mode_usr0
--operation mode is normal

D1_jtag_debug_mode_usr0 = AMPP_FUNCTION(A1L9, K5_dffs[1], K5_dffs[0], D1L53, D1L63, LB1_state[0], LB1_state[12]);


--D1L4 is sld_hub:sld_hub_inst|comb~8
--operation mode is normal

D1L4 = AMPP_FUNCTION(D1_jtag_debug_mode_usr0, LB1_state[4], LB1_state[3]);


--D1L01 is sld_hub:sld_hub_inst|HUB_BYPASS_REG~11
--operation mode is normal

D1L01 = AMPP_FUNCTION(altera_internal_jtag, LB1_state[4]);


--D1L03 is sld_hub:sld_hub_inst|jtag_debug_mode~2
--operation mode is normal

D1L03 = AMPP_FUNCTION(D1_jtag_debug_mode_usr1, D1_jtag_debug_mode_usr0);


--JB6_Q[2] is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[2]
--operation mode is normal

JB6_Q[2] = AMPP_FUNCTION(A1L9, D1L32, D1L42, LB1_state[4], K3_dffs[6], !D1L2, JB6L4);


--JB6_Q[1] is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[1]
--operation mode is normal

JB6_Q[1] = AMPP_FUNCTION(A1L9, JB6_Q[2], H1L3, LB1_state[4], !D1L2, JB6L4);


--D1L5 is sld_hub:sld_hub_inst|comb~66
--operation mode is normal

D1L5 = AMPP_FUNCTION(LB1_state[4], LB1_state[3], D1_jtag_debug_mode_usr0, D1_jtag_debug_mode_usr1);


--D1L6 is sld_hub:sld_hub_inst|comb~67
--operation mode is normal

D1L6 = AMPP_FUNCTION(A1L11, D1L5, altera_internal_jtag);


--K1_dffs[1] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[1]
--operation mode is normal

K1_dffs[1] = AMPP_FUNCTION(A1L9, K1_dffs[2], GB1_safe_q[0], B1L65, !B1_reset_all);


--H1_is_buffer_wrapped_once is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|is_buffer_wrapped_once
--operation mode is normal

H1_is_buffer_wrapped_once = AMPP_FUNCTION(cnt[8], !B1_reset_all, GB1_cout);


--B1L65 is sld_signaltap:FNGDA8_signaltap2|sdr~14
--operation mode is normal

B1L65 = AMPP_FUNCTION(LB1_state[4], D1L23, D1_jtag_debug_mode_usr1);


--K3_dffs[1] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[1]
--operation mode is normal

K3_dffs[1] = AMPP_FUNCTION(A1L9, K3_dffs[2], !B1_reset_all, G1_trigger_setup_ena);


--G1_trigger_setup_ena is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|trigger_setup_ena
--operation mode is normal

G1_trigger_setup_ena = AMPP_FUNCTION(LB1_state[4], JB1_Q[3], D1L23, D1_jtag_debug_mode_usr1);


--X1_status_out[0] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_seg_state_machine:sm2|status_out[0]
--operation mode is normal

X1_status_out[0] = AMPP_FUNCTION(cnt[8], X1L5, X1_status_out[0], V1L31, !B1_reset_all);


--W1_post_trigger_count_enable is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_state_machine:sm1|post_trigger_count_enable
--operation mode is normal

W1_post_trigger_count_enable = AMPP_FUNCTION(cnt[8], H1_is_buffer_wrapped_once, V1L31, W1L5, !B1_reset_all);


--K3_dffs[6] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[6]
--operation mode is normal

K3_dffs[6] = AMPP_FUNCTION(A1L9, K3_dffs[7], !B1_reset_all, G1_trigger_setup_ena);


--G1L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|ela_status~79
--operation mode is normal

G1L2 = AMPP_FUNCTION(X1_status_out[0], W1_post_trigger_count_enable, K3_dffs[6]);


--JB6_Q[7] is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[7]
--operation mode is normal

JB6_Q[7] = AMPP_FUNCTION(A1L9, D1L01, !D1L2, D1_IRSR_ENA);


--MB1_dffe1a[3] is sld_hub:sld_hub_inst|lpm_decode:instruction_decoder|decode_9ie:auto_generated|dffe1a[3]
--operation mode is normal

MB1_dffe1a[3] = AMPP_FUNCTION(A1L9, JB6_Q[2], JB6_Q[1], D1L03, JB6_Q[3], !D1L2, D1L6);


--JB6L3 is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[0]~117
--operation mode is normal

JB6L3 = AMPP_FUNCTION(LB1_state[4], JB6_Q[3], JB6_Q[7], MB1_dffe1a[3]);


--JB6L4 is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[0]~118
--operation mode is normal

JB6L4 = AMPP_FUNCTION(D1_jtag_debug_mode_usr1, JB6L3, LB1_state[4], LB1_state[3]);


--F1_word_counter[3] is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|word_counter[3]
--operation mode is normal

F1_word_counter[3] = AMPP_FUNCTION(A1L9, F1_word_counter[1], F1_word_counter[0], F1_word_counter[2], F1_word_counter[3], !F1_clear_signal, F1L6);


--F1_word_counter[1] is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|word_counter[1]
--operation mode is normal

F1_word_counter[1] = AMPP_FUNCTION(A1L9, F1_word_counter[1], F1_word_counter[0], !F1_clear_signal, F1L6);


--F1_word_counter[0] is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|word_counter[0]
--operation mode is normal

F1_word_counter[0] = AMPP_FUNCTION(A1L9, F1_word_counter[1], F1L3, F1_word_counter[0], F1L6, !F1_clear_signal);


--F1L61 is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|WORD_SR~214
--operation mode is normal

F1L61 = AMPP_FUNCTION(F1_word_counter[3], F1_word_counter[1], F1_word_counter[0]);


--F1L2 is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|reduce_nor~14
--operation mode is normal

F1L2 = AMPP_FUNCTION(F1_word_counter[1], F1_word_counter[0]);


--F1_WORD_SR[1] is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|WORD_SR[1]
--operation mode is normal

F1_WORD_SR[1] = AMPP_FUNCTION(A1L9, F1_WORD_SR[2], F1_word_counter[2], F1L71, LB1_state[4], !F1_clear_signal, B1L94);


--F1_word_counter[2] is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|word_counter[2]
--operation mode is normal

F1_word_counter[2] = AMPP_FUNCTION(A1L9, F1_word_counter[2], !F1_clear_signal, F1L9);


--B1L94 is sld_signaltap:FNGDA8_signaltap2|comb~26
--operation mode is normal

B1L94 = AMPP_FUNCTION(D1L23, LB1_state[4], LB1_state[3], D1_jtag_debug_mode_usr1);


--LB1_state[7] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[7]
--operation mode is normal

LB1_state[7] = AMPP_FUNCTION(A1L9, A1L11, LB1_state[6], VCC);


--LB1_state[2] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[2]
--operation mode is normal

LB1_state[2] = AMPP_FUNCTION(A1L9, LB1_state[8], LB1_state[1], LB1_state[15], VCC, !A1L11);


--cnt[1] is cnt[1]
--operation mode is arithmetic

cnt[1]_carry_eqn = A1L12;
cnt[1]_lut_out = cnt[1] $ (cnt[1]_carry_eqn);
cnt[1] = DFFEAS(cnt[1]_lut_out, clock, VCC, , , , , , );

--A1L32 is cnt[1]~229
--operation mode is arithmetic

A1L32 = CARRY(!A1L12 # !cnt[1]);


--cnt[14] is cnt[14]
--operation mode is arithmetic

cnt[14]_carry_eqn = A1L74;
cnt[14]_lut_out = cnt[14] $ (!cnt[14]_carry_eqn);
cnt[14] = DFFEAS(cnt[14]_lut_out, clock, VCC, , , , , , );

--A1L94 is cnt[14]~233
--operation mode is arithmetic

A1L94 = CARRY(cnt[14] & (!A1L74));


--A1L58 is freqs[8]~127
--operation mode is normal

A1L58 = sweep & cnt[14] # !sweep & (freq[8]);


--sum[7] is sum[7]
--operation mode is arithmetic

sum[7]_carry_eqn = A1L221;
sum[7]_lut_out = A1L48 $ sum[7] $ sum[7]_carry_eqn;
sum[7] = DFFEAS(sum[7]_lut_out, cnt[6], VCC, , , , , , );

--A1L421 is sum[7]~145
--operation mode is arithmetic

A1L421 = CARRY(A1L48 & !sum[7] & !A1L221 # !A1L48 & (!A1L221 # !sum[7]));


--LB1_state[15] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[15]
--operation mode is normal

LB1_state[15] = AMPP_FUNCTION(A1L9, LB1_state[12], LB1_state[14], VCC, !A1L11);


--MB1_dffe1a[7] is sld_hub:sld_hub_inst|lpm_decode:instruction_decoder|decode_9ie:auto_generated|dffe1a[7]
--operation mode is normal

MB1_dffe1a[7] = AMPP_FUNCTION(A1L9, JB6_Q[3], JB6_Q[2], JB6_Q[1], D1L03, !D1L2, D1L6);


--D1L3 is sld_hub:sld_hub_inst|comb~6
--operation mode is normal

D1L3 = AMPP_FUNCTION(LB1_state[8], D1_OK_TO_UPDATE_IR_Q, JB3_Q[0]);


--D1L43 is sld_hub:sld_hub_inst|process2~0
--operation mode is normal

D1L43 = AMPP_FUNCTION(LB1_state[8], LB1_state[4]);


--D1L8 is sld_hub:sld_hub_inst|GEN_SHADOW_IRF~0
--operation mode is normal

D1L8 = AMPP_FUNCTION(JB4_Q[0], D1_OK_TO_UPDATE_IR_Q, LB1_state[5]);


--V1_trigger_happened_ff[0] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened_ff[0]
--operation mode is normal

V1_trigger_happened_ff[0] = AMPP_FUNCTION(cnt[8], Y72_match_out, JB1_Q[1], V1L1);


--K3_dffs[2] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[2]
--operation mode is normal

K3_dffs[2] = AMPP_FUNCTION(A1L9, K3_dffs[3], !B1_reset_all, G1_trigger_setup_ena);


--V1_trigger_happened_ff[1] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened_ff[1]
--operation mode is normal

V1_trigger_happened_ff[1] = AMPP_FUNCTION(cnt[8], JB1_Q[1], B1L55);


--D1L52 is sld_hub:sld_hub_inst|IRSR_D[3]~450
--operation mode is normal

D1L52 = AMPP_FUNCTION(V1_trigger_happened_ff[0], K3_dffs[2], LB1_state[4], V1_trigger_happened_ff[1]);


--Y62_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:12:sm1|match_out
--operation mode is normal

Y62_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[12], Y62L3, K4_dffs[77], Y62_holdff, VCC);


--V1L7 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened~269
--operation mode is normal

V1L7 = AMPP_FUNCTION(Y62_match_out, V1_trigger_happened_ff[1], V1_trigger_happened_ff[0], K3_dffs[2]);


--Y41_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|match_out
--operation mode is normal

Y41_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[0], Y41L3, K4_dffs[41], Y41_holdff, VCC);


--Y51_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:1:sm1|match_out
--operation mode is normal

Y51_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[1], Y51L3, K4_dffs[44], Y51_holdff, VCC);


--Y61_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:2:sm1|match_out
--operation mode is normal

Y61_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[2], Y61L3, K4_dffs[47], Y61_holdff, VCC);


--Y71_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:3:sm1|match_out
--operation mode is normal

Y71_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[3], Y71L3, K4_dffs[50], Y71_holdff, VCC);


--V1L8 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened~270
--operation mode is normal

V1L8 = AMPP_FUNCTION(Y41_match_out, Y51_match_out, Y61_match_out, Y71_match_out);


--Y81_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:4:sm1|match_out
--operation mode is normal

Y81_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[4], Y81L3, K4_dffs[53], Y81_holdff, VCC);


--Y91_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:5:sm1|match_out
--operation mode is normal

Y91_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[5], Y91L3, K4_dffs[56], Y91_holdff, VCC);


--Y02_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:6:sm1|match_out
--operation mode is normal

Y02_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[6], Y02L3, K4_dffs[59], Y02_holdff, VCC);


--Y12_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:7:sm1|match_out
--operation mode is normal

Y12_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[7], Y12L3, K4_dffs[62], Y12_holdff, VCC);


--V1L9 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened~271
--operation mode is normal

V1L9 = AMPP_FUNCTION(Y81_match_out, Y91_match_out, Y02_match_out, Y12_match_out);


--Y22_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:8:sm1|match_out
--operation mode is normal

Y22_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[8], Y22L3, K4_dffs[65], Y22_holdff, VCC);


--Y32_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:9:sm1|match_out
--operation mode is normal

Y32_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[9], Y32L3, K4_dffs[68], Y32_holdff, VCC);


--Y52_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:11:sm1|match_out
--operation mode is normal

Y52_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[11], Y52L3, K4_dffs[74], Y52_holdff, VCC);


--Y42_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:10:sm1|match_out
--operation mode is normal

Y42_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[12], Y42L2, K4_dffs[71], Y62_holdff, VCC);


--V1L01 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened~272
--operation mode is normal

V1L01 = AMPP_FUNCTION(Y22_match_out, Y32_match_out, Y52_match_out, Y42_match_out);


--V1L11 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened~273
--operation mode is normal

V1L11 = AMPP_FUNCTION(V1L7, V1L8, V1L9, V1L01);


--V1_trigger_happened_ff[2] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened_ff[2]
--operation mode is normal

V1_trigger_happened_ff[2] = AMPP_FUNCTION(cnt[8], JB1_Q[1], V1L11);


--K3_dffs[3] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[3]
--operation mode is normal

K3_dffs[3] = AMPP_FUNCTION(A1L9, K3_dffs[4], !B1_reset_all, G1_trigger_setup_ena);


--V1L21 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened~274
--operation mode is normal

V1L21 = AMPP_FUNCTION(V1_trigger_happened_ff[1], V1_trigger_happened_ff[0], K3_dffs[2], K3_dffs[3]);


--V1L31 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened~275
--operation mode is normal

V1L31 = AMPP_FUNCTION(V1L11, V1_trigger_happened_ff[2], V1L21, K3_dffs[6]);


--MB1_dffe1a[1] is sld_hub:sld_hub_inst|lpm_decode:instruction_decoder|decode_9ie:auto_generated|dffe1a[1]
--operation mode is normal

MB1_dffe1a[1] = AMPP_FUNCTION(A1L9, JB6_Q[1], D1L03, JB6_Q[3], JB6_Q[2], !D1L2, D1L6);


--D1L7 is sld_hub:sld_hub_inst|comb~68
--operation mode is normal

D1L7 = AMPP_FUNCTION(LB1_state[8], D1_OK_TO_UPDATE_IR_Q);


--D1L1 is sld_hub:sld_hub_inst|BROADCAST_ENA~27
--operation mode is normal

D1L1 = AMPP_FUNCTION(JB5_Q[0], D1L7, MB1_dffe1a[2], MB1_dffe1a[1]);


--JB6_Q[6] is sld_hub:sld_hub_inst|sld_dffex:IRSR|Q[6]
--operation mode is normal

JB6_Q[6] = AMPP_FUNCTION(A1L9, LB1_state[4], JB6_Q[7], !D1L2, JB6L4);


--LB1_state[11] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[11]
--operation mode is normal

LB1_state[11] = AMPP_FUNCTION(A1L9, LB1_state[11], LB1_state[10], LB1_state[14], VCC, A1L11);


--LB1_state[9] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[9]
--operation mode is normal

LB1_state[9] = AMPP_FUNCTION(A1L9, A1L11, LB1_state[2], VCC);


--LB1_tms_cnt[2] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|tms_cnt[2]
--operation mode is normal

LB1_tms_cnt[2] = AMPP_FUNCTION(A1L9, LB1_tms_cnt[2], LB1_tms_cnt[1], LB1_tms_cnt[0], VCC, !A1L11);


--LB1_tms_cnt[1] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|tms_cnt[1]
--operation mode is normal

LB1_tms_cnt[1] = AMPP_FUNCTION(A1L9, LB1_tms_cnt[1], LB1_tms_cnt[0], VCC, !A1L11);


--LB1_tms_cnt[0] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|tms_cnt[0]
--operation mode is normal

LB1_tms_cnt[0] = AMPP_FUNCTION(A1L9, A1L11, LB1_tms_cnt[0], VCC);


--LB1L91 is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state~204
--operation mode is normal

LB1L91 = AMPP_FUNCTION(LB1_tms_cnt[2], LB1_tms_cnt[1], LB1_tms_cnt[0]);


--LB1_state[10] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[10]
--operation mode is normal

LB1_state[10] = AMPP_FUNCTION(A1L9, LB1_state[9], A1L11, VCC);


--V1L6 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|trigger_happened~1
--operation mode is normal

V1L6 = AMPP_FUNCTION(V1_trigger_happened_ff[1], V1_trigger_happened_ff[0], K3_dffs[2]);


--JB2_Q[0] is sld_hub:sld_hub_inst|sld_dffex:\GEN_SHADOW_IRF:1:S_IRF|Q[0]
--operation mode is normal

JB2_Q[0] = AMPP_FUNCTION(A1L9, JB6_Q[0], !D1L2, D1L8);


--D1L13 is sld_hub:sld_hub_inst|jtag_debug_mode~171
--operation mode is normal

D1L13 = AMPP_FUNCTION(LB1_state[12], A1L11, LB1_state[2]);


--F2L01 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|reduce_nor~26
--operation mode is normal

F2L01 = AMPP_FUNCTION(F2_word_counter[1], F2_word_counter[2], F2_word_counter[3]);


--F2L1 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~76
--operation mode is normal

F2L1 = AMPP_FUNCTION(F2_word_counter[4], F2L7);


--F2L31 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|word_counter[0]~8
--operation mode is normal

F2L31 = AMPP_FUNCTION(LB1_state[3], D1_jtag_debug_mode_usr0, LB1_state[4]);


--F2L2 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~81
--operation mode is arithmetic

F2L2 = AMPP_FUNCTION(F2_word_counter[1], F2L9);

--F2L3 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~83
--operation mode is arithmetic

F2L3 = AMPP_FUNCTION(F2_word_counter[1], F2L9);


--F2L4 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~86
--operation mode is arithmetic

F2L4 = AMPP_FUNCTION(F2_word_counter[2], F2L3);

--F2L5 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~88
--operation mode is arithmetic

F2L5 = AMPP_FUNCTION(F2_word_counter[2], F2L3);


--F2L6 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~91
--operation mode is arithmetic

F2L6 = AMPP_FUNCTION(F2_word_counter[3], F2L5);

--F2L7 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~93
--operation mode is arithmetic

F2L7 = AMPP_FUNCTION(F2_word_counter[3], F2L5);


--F2L52 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR~139
--operation mode is normal

F2L52 = AMPP_FUNCTION(F2_word_counter[2], F2_word_counter[4], F2_word_counter[3], F2_word_counter[1]);


--F2L62 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR~140
--operation mode is normal

F2L62 = AMPP_FUNCTION(F2_word_counter[1], F2_word_counter[2]);


--F2_WORD_SR[2] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR[2]
--operation mode is normal

F2_WORD_SR[2] = AMPP_FUNCTION(A1L9, F2L52, F2L62, F2_WORD_SR[3], F2_word_counter[0], !F1_clear_signal, LB1_state[4], D1L4);


--F2L8 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~96
--operation mode is arithmetic

F2L8 = AMPP_FUNCTION(F2_word_counter[0]);

--F2L9 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|add~98
--operation mode is arithmetic

F2L9 = AMPP_FUNCTION(F2_word_counter[0]);


--X1_status_out[2] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_seg_state_machine:sm2|status_out[2]
--operation mode is normal

X1_status_out[2] = AMPP_FUNCTION(cnt[8], JB1_Q[1], !B1_reset_all);


--D1L32 is sld_hub:sld_hub_inst|IRSR_D[2]~454
--operation mode is normal

D1L32 = AMPP_FUNCTION(JB6_Q[3], K3_dffs[6], X1_status_out[2], LB1_state[4]);


--W1_ela_done is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_state_machine:sm1|ela_done
--operation mode is normal

W1_ela_done = AMPP_FUNCTION(cnt[8], JB1_Q[1], Z1_counter_cella12, S1L1, W1L2, !B1_reset_all);


--JB1_Q[1] is sld_hub:sld_hub_inst|sld_dffex:\GEN_IRF:1:IRF|Q[1]
--operation mode is normal

JB1_Q[1] = AMPP_FUNCTION(A1L9, JB2_Q[1], JB6_Q[1], JB3_Q[0], !D1L2, D1L22);


--D1L42 is sld_hub:sld_hub_inst|IRSR_D[2]~455
--operation mode is normal

D1L42 = AMPP_FUNCTION(W1_post_trigger_count_enable, W1_ela_done, H1_is_buffer_wrapped_once, JB1_Q[1]);


--X1_status_out[1] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_seg_state_machine:sm2|status_out[1]
--operation mode is normal

X1_status_out[1] = AMPP_FUNCTION(cnt[8], X1L5, !B1_reset_all);


--W1_buffer_write_enable is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_state_machine:sm1|buffer_write_enable
--operation mode is normal

W1_buffer_write_enable = AMPP_FUNCTION(cnt[8], W1L5, !B1_reset_all);


--H1L3 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|trigger_write_addr_latch_ena~50
--operation mode is normal

H1L3 = AMPP_FUNCTION(X1_status_out[1], W1_buffer_write_enable, K3_dffs[6]);


--K1_dffs[2] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[2]
--operation mode is normal

K1_dffs[2] = AMPP_FUNCTION(A1L9, K1_dffs[3], GB1_safe_q[1], B1L65, !B1_reset_all);


--GB1_safe_q[0] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[0]
--operation mode is arithmetic

GB1_safe_q[0] = AMPP_FUNCTION(cnt[8], GB1_safe_q[0], !B1_reset_all, G1L1);

--GB1L2 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella0~COUT
--operation mode is arithmetic

GB1L2 = AMPP_FUNCTION(GB1_safe_q[0]);


--cnt[8] is cnt[8]
--operation mode is arithmetic

cnt[8]_carry_eqn = A1L53;
cnt[8]_lut_out = cnt[8] $ (!cnt[8]_carry_eqn);
cnt[8] = DFFEAS(cnt[8]_lut_out, clock, VCC, , , , , , );

--A1L73 is cnt[8]~237
--operation mode is arithmetic

A1L73 = CARRY(cnt[8] & (!A1L53));


--GB1_cout is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|cout
--operation mode is normal

GB1_cout = AMPP_FUNCTION(GB1L62);


--X1L5 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_seg_state_machine:sm2|status_out~127
--operation mode is normal

X1L5 = AMPP_FUNCTION(JB1_Q[1], GB1_cout, H1_is_buffer_wrapped_once);


--K3_dffs[4] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[4]
--operation mode is normal

K3_dffs[4] = AMPP_FUNCTION(A1L9, K3_dffs[5], !B1_reset_all, G1_trigger_setup_ena);


--Z1_counter_cella10 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella10
--operation mode is arithmetic

Z1_counter_cella10 = AMPP_FUNCTION(cnt[8], Z1_counter_cella10, !B1_reset_all, W1_post_trigger_count_enable, Z1L02);

--Z1L22 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella10~COUT
--operation mode is arithmetic

Z1L22 = AMPP_FUNCTION(Z1_counter_cella10, Z1L02);


--K3_dffs[5] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[5]
--operation mode is normal

K3_dffs[5] = AMPP_FUNCTION(A1L9, K3_dffs[6], !B1_reset_all, G1_trigger_setup_ena);


--W1L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_state_machine:sm1|edq~69
--operation mode is normal

W1L2 = AMPP_FUNCTION(K3_dffs[4], Z1_counter_cella10, K3_dffs[5], W1_ela_done);


--Z1_counter_cella12 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella12
--operation mode is normal

Z1_counter_cella12 = AMPP_FUNCTION(cnt[8], Z1_counter_cella12, !B1_reset_all, W1_post_trigger_count_enable, Z1L42);


--Z1_counter_cella11 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella11
--operation mode is arithmetic

Z1_counter_cella11 = AMPP_FUNCTION(cnt[8], Z1_counter_cella11, !B1_reset_all, W1_post_trigger_count_enable, Z1L22);

--Z1L42 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella11~COUT
--operation mode is arithmetic

Z1L42 = AMPP_FUNCTION(Z1_counter_cella11, Z1L22);


--S1L1 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|stop_acquisition~100
--operation mode is normal

S1L1 = AMPP_FUNCTION(Z1_counter_cella10, Z1_counter_cella11, K3_dffs[4], K3_dffs[5]);


--W1L5 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_state_machine:sm1|post_trigger_count_enable~35
--operation mode is normal

W1L5 = AMPP_FUNCTION(JB1_Q[1], W1L2, Z1_counter_cella12, S1L1);


--K3_dffs[7] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[7]
--operation mode is normal

K3_dffs[7] = AMPP_FUNCTION(A1L9, K3_dffs[8], !B1_reset_all, G1_trigger_setup_ena);


--D1_IRSR_ENA is sld_hub:sld_hub_inst|IRSR_ENA
--operation mode is normal

D1_IRSR_ENA = AMPP_FUNCTION(D1_jtag_debug_mode_usr1, LB1_state[4], LB1_state[3]);


--F1L6 is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|word_counter[0]~6
--operation mode is normal

F1L6 = AMPP_FUNCTION(LB1_state[3], D1L23, LB1_state[4], D1_jtag_debug_mode_usr1);


--F1L3 is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|reduce_nor~15
--operation mode is normal

F1L3 = AMPP_FUNCTION(F1_word_counter[2], F1_word_counter[3]);


--F1_WORD_SR[2] is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|WORD_SR[2]
--operation mode is normal

F1_WORD_SR[2] = AMPP_FUNCTION(A1L9, F1_WORD_SR[3], F1_word_counter[2], F1L81, LB1_state[4], !F1_clear_signal, B1L94);


--F1L71 is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|WORD_SR~216
--operation mode is normal

F1L71 = AMPP_FUNCTION(F1_word_counter[0], F1_word_counter[1]);


--F1L9 is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|word_counter[2]~196
--operation mode is normal

F1L9 = AMPP_FUNCTION(F1_word_counter[1], F1_word_counter[0], F1L6);


--LB1_state[6] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[6]
--operation mode is normal

LB1_state[6] = AMPP_FUNCTION(A1L9, LB1_state[5], LB1_state[6], VCC, A1L11);


--cnt[0] is cnt[0]
--operation mode is arithmetic

cnt[0]_lut_out = !cnt[0];
cnt[0] = DFFEAS(cnt[0]_lut_out, clock, VCC, , , , , , );

--A1L12 is cnt[0]~241
--operation mode is arithmetic

A1L12 = CARRY(cnt[0]);


--cnt[13] is cnt[13]
--operation mode is arithmetic

cnt[13]_carry_eqn = A1L54;
cnt[13]_lut_out = cnt[13] $ (cnt[13]_carry_eqn);
cnt[13] = DFFEAS(cnt[13]_lut_out, clock, VCC, , , , , , );

--A1L74 is cnt[13]~245
--operation mode is arithmetic

A1L74 = CARRY(!A1L54 # !cnt[13]);


--A1L48 is freqs[7]~128
--operation mode is normal

A1L48 = sweep & cnt[13] # !sweep & (freq[7]);


--sum[6] is sum[6]
--operation mode is arithmetic

sum[6]_carry_eqn = A1L021;
sum[6]_lut_out = A1L38 $ sum[6] $ !sum[6]_carry_eqn;
sum[6] = DFFEAS(sum[6]_lut_out, cnt[6], VCC, , , , , , );

--A1L221 is sum[6]~149
--operation mode is arithmetic

A1L221 = CARRY(A1L38 & (sum[6] # !A1L021) # !A1L38 & sum[6] & !A1L021);


--LB1_state[14] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[14]
--operation mode is normal

LB1_state[14] = AMPP_FUNCTION(A1L9, A1L11, LB1_state[13], VCC);


--Y72_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_mbpmg:\trigger_in_trigger_module_enabled_gen:trigger_in_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|match_out
--operation mode is normal

Y72_match_out = AMPP_FUNCTION(cnt[8], B1_trigger_in_reg, Y72L3, K3_dffs[22], Y72_holdff, VCC);


--V1L1 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_level_seq_mgr:ela_level_seq_mgr|process0~19
--operation mode is normal

V1L1 = AMPP_FUNCTION(H1_is_buffer_wrapped_once, K3_dffs[6], V1_trigger_happened_ff[0]);


--Y31_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:12:sm1|match_out
--operation mode is normal

Y31_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[12], Y31L2, K4_dffs[38], Y62_holdff, VCC);


--Y1_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|match_out
--operation mode is normal

Y1_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[0], Y1L2, K4_dffs[2], Y41_holdff, VCC);


--Y2_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:1:sm1|match_out
--operation mode is normal

Y2_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[1], Y2L2, K4_dffs[5], Y51_holdff, VCC);


--B1L15 is sld_signaltap:FNGDA8_signaltap2|rtl~119
--operation mode is normal

B1L15 = AMPP_FUNCTION(V1_trigger_happened_ff[0], Y31_match_out, Y1_match_out, Y2_match_out);


--Y3_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:2:sm1|match_out
--operation mode is normal

Y3_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[2], Y3L2, K4_dffs[8], Y61_holdff, VCC);


--Y4_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:3:sm1|match_out
--operation mode is normal

Y4_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[3], Y4L2, K4_dffs[11], Y71_holdff, VCC);


--Y5_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:4:sm1|match_out
--operation mode is normal

Y5_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[4], Y5L2, K4_dffs[14], Y81_holdff, VCC);


--Y6_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:5:sm1|match_out
--operation mode is normal

Y6_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[5], Y6L2, K4_dffs[17], Y91_holdff, VCC);


--B1L25 is sld_signaltap:FNGDA8_signaltap2|rtl~120
--operation mode is normal

B1L25 = AMPP_FUNCTION(Y3_match_out, Y4_match_out, Y5_match_out, Y6_match_out);


--Y7_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:6:sm1|match_out
--operation mode is normal

Y7_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[6], Y7L2, K4_dffs[20], Y02_holdff, VCC);


--Y8_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:7:sm1|match_out
--operation mode is normal

Y8_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[7], Y8L2, K4_dffs[23], Y12_holdff, VCC);


--Y9_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:8:sm1|match_out
--operation mode is normal

Y9_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[8], Y9L2, K4_dffs[26], Y22_holdff, VCC);


--Y01_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:9:sm1|match_out
--operation mode is normal

Y01_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[9], Y01L2, K4_dffs[29], Y32_holdff, VCC);


--B1L35 is sld_signaltap:FNGDA8_signaltap2|rtl~121
--operation mode is normal

B1L35 = AMPP_FUNCTION(Y7_match_out, Y8_match_out, Y9_match_out, Y01_match_out);


--Y21_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:11:sm1|match_out
--operation mode is normal

Y21_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[11], Y21L2, K4_dffs[35], Y52_holdff, VCC);


--Y11_match_out is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:10:sm1|match_out
--operation mode is normal

Y11_match_out = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[12], Y11L2, K4_dffs[32], Y62_holdff, VCC);


--B1L45 is sld_signaltap:FNGDA8_signaltap2|rtl~122
--operation mode is normal

B1L45 = AMPP_FUNCTION(Y21_match_out, Y11_match_out);


--B1L55 is sld_signaltap:FNGDA8_signaltap2|rtl~123
--operation mode is normal

B1L55 = AMPP_FUNCTION(B1L15, B1L25, B1L35, B1L45);


--K4_dffs[75] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[75]
--operation mode is normal

K4_dffs[75] = AMPP_FUNCTION(A1L9, K4_dffs[76], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[76] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[76]
--operation mode is normal

K4_dffs[76] = AMPP_FUNCTION(A1L9, K4_dffs[77], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[12] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[12]
--operation mode is normal

B1_acq_trigger_in_reg[12] = AMPP_FUNCTION(cnt[8], strb, VCC);


--Y62_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:12:sm1|holdff
--operation mode is normal

Y62_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[12], VCC);


--K4_dffs[77] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[77]
--operation mode is normal

K4_dffs[77] = AMPP_FUNCTION(A1L9, altera_internal_jtag, !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[39] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[39]
--operation mode is normal

K4_dffs[39] = AMPP_FUNCTION(A1L9, K4_dffs[40], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[40] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[40]
--operation mode is normal

K4_dffs[40] = AMPP_FUNCTION(A1L9, K4_dffs[41], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[0] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[0]
--operation mode is normal

B1_acq_trigger_in_reg[0] = AMPP_FUNCTION(cnt[8], A1L65, VCC);


--Y41_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|holdff
--operation mode is normal

Y41_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[0], VCC);


--K4_dffs[41] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[41]
--operation mode is normal

K4_dffs[41] = AMPP_FUNCTION(A1L9, K4_dffs[42], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[42] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[42]
--operation mode is normal

K4_dffs[42] = AMPP_FUNCTION(A1L9, K4_dffs[43], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[43] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[43]
--operation mode is normal

K4_dffs[43] = AMPP_FUNCTION(A1L9, K4_dffs[44], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[1] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[1]
--operation mode is normal

B1_acq_trigger_in_reg[1] = AMPP_FUNCTION(cnt[8], HB1_q_a[0], VCC);


--Y51_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:1:sm1|holdff
--operation mode is normal

Y51_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[1], VCC);


--K4_dffs[44] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[44]
--operation mode is normal

K4_dffs[44] = AMPP_FUNCTION(A1L9, K4_dffs[45], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[45] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[45]
--operation mode is normal

K4_dffs[45] = AMPP_FUNCTION(A1L9, K4_dffs[46], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[46] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[46]
--operation mode is normal

K4_dffs[46] = AMPP_FUNCTION(A1L9, K4_dffs[47], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[2] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[2]
--operation mode is normal

B1_acq_trigger_in_reg[2] = AMPP_FUNCTION(cnt[8], HB1_q_a[1], VCC);


--Y61_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:2:sm1|holdff
--operation mode is normal

Y61_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[2], VCC);


--K4_dffs[47] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[47]
--operation mode is normal

K4_dffs[47] = AMPP_FUNCTION(A1L9, K4_dffs[48], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[48] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[48]
--operation mode is normal

K4_dffs[48] = AMPP_FUNCTION(A1L9, K4_dffs[49], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[49] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[49]
--operation mode is normal

K4_dffs[49] = AMPP_FUNCTION(A1L9, K4_dffs[50], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[3] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[3]
--operation mode is normal

B1_acq_trigger_in_reg[3] = AMPP_FUNCTION(cnt[8], HB1_q_a[2], VCC);


--Y71_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:3:sm1|holdff
--operation mode is normal

Y71_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[3], VCC);


--K4_dffs[50] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[50]
--operation mode is normal

K4_dffs[50] = AMPP_FUNCTION(A1L9, K4_dffs[51], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[51] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[51]
--operation mode is normal

K4_dffs[51] = AMPP_FUNCTION(A1L9, K4_dffs[52], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[52] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[52]
--operation mode is normal

K4_dffs[52] = AMPP_FUNCTION(A1L9, K4_dffs[53], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[4] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[4]
--operation mode is normal

B1_acq_trigger_in_reg[4] = AMPP_FUNCTION(cnt[8], HB1_q_a[3], VCC);


--Y81_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:4:sm1|holdff
--operation mode is normal

Y81_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[4], VCC);


--K4_dffs[53] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[53]
--operation mode is normal

K4_dffs[53] = AMPP_FUNCTION(A1L9, K4_dffs[54], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[54] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[54]
--operation mode is normal

K4_dffs[54] = AMPP_FUNCTION(A1L9, K4_dffs[55], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[55] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[55]
--operation mode is normal

K4_dffs[55] = AMPP_FUNCTION(A1L9, K4_dffs[56], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[5] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[5]
--operation mode is normal

B1_acq_trigger_in_reg[5] = AMPP_FUNCTION(cnt[8], HB1_q_a[4], VCC);


--Y91_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:5:sm1|holdff
--operation mode is normal

Y91_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[5], VCC);


--K4_dffs[56] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[56]
--operation mode is normal

K4_dffs[56] = AMPP_FUNCTION(A1L9, K4_dffs[57], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[57] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[57]
--operation mode is normal

K4_dffs[57] = AMPP_FUNCTION(A1L9, K4_dffs[58], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[58] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[58]
--operation mode is normal

K4_dffs[58] = AMPP_FUNCTION(A1L9, K4_dffs[59], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[6] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[6]
--operation mode is normal

B1_acq_trigger_in_reg[6] = AMPP_FUNCTION(cnt[8], HB1_q_a[5], VCC);


--Y02_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:6:sm1|holdff
--operation mode is normal

Y02_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[6], VCC);


--K4_dffs[59] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[59]
--operation mode is normal

K4_dffs[59] = AMPP_FUNCTION(A1L9, K4_dffs[60], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[60] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[60]
--operation mode is normal

K4_dffs[60] = AMPP_FUNCTION(A1L9, K4_dffs[61], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[61] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[61]
--operation mode is normal

K4_dffs[61] = AMPP_FUNCTION(A1L9, K4_dffs[62], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[7] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[7]
--operation mode is normal

B1_acq_trigger_in_reg[7] = AMPP_FUNCTION(cnt[8], HB1_q_a[6], VCC);


--Y12_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:7:sm1|holdff
--operation mode is normal

Y12_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[7], VCC);


--K4_dffs[62] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[62]
--operation mode is normal

K4_dffs[62] = AMPP_FUNCTION(A1L9, K4_dffs[63], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[63] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[63]
--operation mode is normal

K4_dffs[63] = AMPP_FUNCTION(A1L9, K4_dffs[64], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[64] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[64]
--operation mode is normal

K4_dffs[64] = AMPP_FUNCTION(A1L9, K4_dffs[65], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[8] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[8]
--operation mode is normal

B1_acq_trigger_in_reg[8] = AMPP_FUNCTION(cnt[8], HB1_q_a[7], VCC);


--Y22_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:8:sm1|holdff
--operation mode is normal

Y22_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[8], VCC);


--K4_dffs[65] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[65]
--operation mode is normal

K4_dffs[65] = AMPP_FUNCTION(A1L9, K4_dffs[66], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[66] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[66]
--operation mode is normal

K4_dffs[66] = AMPP_FUNCTION(A1L9, K4_dffs[67], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[67] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[67]
--operation mode is normal

K4_dffs[67] = AMPP_FUNCTION(A1L9, K4_dffs[68], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[9] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[9]
--operation mode is normal

B1_acq_trigger_in_reg[9] = AMPP_FUNCTION(cnt[8], setab, VCC);


--Y32_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:9:sm1|holdff
--operation mode is normal

Y32_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[9], VCC);


--K4_dffs[68] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[68]
--operation mode is normal

K4_dffs[68] = AMPP_FUNCTION(A1L9, K4_dffs[69], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[72] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[72]
--operation mode is normal

K4_dffs[72] = AMPP_FUNCTION(A1L9, K4_dffs[73], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[73] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[73]
--operation mode is normal

K4_dffs[73] = AMPP_FUNCTION(A1L9, K4_dffs[74], !B1_reset_all, G1_trigger_setup_ena);


--B1_acq_trigger_in_reg[11] is sld_signaltap:FNGDA8_signaltap2|acq_trigger_in_reg[11]
--operation mode is normal

B1_acq_trigger_in_reg[11] = AMPP_FUNCTION(cnt[8], sweep, VCC);


--Y52_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:11:sm1|holdff
--operation mode is normal

Y52_holdff = AMPP_FUNCTION(cnt[8], B1_acq_trigger_in_reg[11], VCC);


--K4_dffs[74] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[74]
--operation mode is normal

K4_dffs[74] = AMPP_FUNCTION(A1L9, K4_dffs[75], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[70] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[70]
--operation mode is normal

K4_dffs[70] = AMPP_FUNCTION(A1L9, K4_dffs[71], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[69] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[69]
--operation mode is normal

K4_dffs[69] = AMPP_FUNCTION(A1L9, K4_dffs[70], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[71] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[71]
--operation mode is normal

K4_dffs[71] = AMPP_FUNCTION(A1L9, K4_dffs[72], !B1_reset_all, G1_trigger_setup_ena);


--F2_WORD_SR[3] is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR[3]
--operation mode is normal

F2_WORD_SR[3] = AMPP_FUNCTION(A1L9, F2L72, F2_word_counter[1], altera_internal_jtag, F2_word_counter[0], !F1_clear_signal, LB1_state[4], D1L4);


--JB2_Q[1] is sld_hub:sld_hub_inst|sld_dffex:\GEN_SHADOW_IRF:1:S_IRF|Q[1]
--operation mode is normal

JB2_Q[1] = AMPP_FUNCTION(A1L9, JB6_Q[1], !D1L2, D1L8);


--K1_dffs[3] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[3]
--operation mode is normal

K1_dffs[3] = AMPP_FUNCTION(A1L9, K1_dffs[4], GB1_safe_q[2], B1L65, !B1_reset_all);


--GB1_safe_q[1] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[1]
--operation mode is arithmetic

GB1_safe_q[1] = AMPP_FUNCTION(cnt[8], GB1_safe_q[1], !B1_reset_all, G1L1, GB1L2);

--GB1L4 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella1~COUT
--operation mode is arithmetic

GB1L4 = AMPP_FUNCTION(GB1_safe_q[1], GB1L2);


--H1L2 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|is_buffer_wrapped~0
--operation mode is normal

H1L2 = AMPP_FUNCTION(GB1_cout, H1_is_buffer_wrapped_once);


--T1_segment_write_addr_adv_ena is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|segment_write_addr_adv_ena
--operation mode is normal

T1_segment_write_addr_adv_ena = AMPP_FUNCTION(cnt[8], V1L31, T1_segment_write_addr_adv_ena, JB1_Q[1], DB31L1, !B1_reset_all);


--G1L1 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|buffer_write_addr_adv_ena_int~53
--operation mode is normal

G1L1 = AMPP_FUNCTION(H1L2, T1_segment_write_addr_adv_ena, W1_buffer_write_enable, K3_dffs[6]);


--cnt[7] is cnt[7]
--operation mode is arithmetic

cnt[7]_carry_eqn = A1L33;
cnt[7]_lut_out = cnt[7] $ (cnt[7]_carry_eqn);
cnt[7] = DFFEAS(cnt[7]_lut_out, clock, VCC, , , , , , );

--A1L53 is cnt[7]~249
--operation mode is arithmetic

A1L53 = CARRY(!A1L33 # !cnt[7]);


--GB1_safe_q[12] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[12]
--operation mode is arithmetic

GB1_safe_q[12] = AMPP_FUNCTION(cnt[8], GB1_safe_q[12], !B1_reset_all, G1L1, GB1L42);

--GB1L62 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella12~COUT
--operation mode is arithmetic

GB1L62 = AMPP_FUNCTION(GB1_safe_q[12], GB1L42);


--Z1_counter_cella9 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella9
--operation mode is arithmetic

Z1_counter_cella9 = AMPP_FUNCTION(cnt[8], Z1_counter_cella9, !B1_reset_all, W1_post_trigger_count_enable, Z1L81);

--Z1L02 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella9~COUT
--operation mode is arithmetic

Z1L02 = AMPP_FUNCTION(Z1_counter_cella9, Z1L81);


--K3_dffs[8] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[8]
--operation mode is normal

K3_dffs[8] = AMPP_FUNCTION(A1L9, K3_dffs[9], !B1_reset_all, G1_trigger_setup_ena);


--F1_WORD_SR[3] is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|WORD_SR[3]
--operation mode is normal

F1_WORD_SR[3] = AMPP_FUNCTION(A1L9, F1L91, F1_word_counter[0], altera_internal_jtag, F1_word_counter[2], !F1_clear_signal, LB1_state[4], B1L94);


--F1L81 is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|WORD_SR~218
--operation mode is normal

F1L81 = AMPP_FUNCTION(F1_word_counter[1], F1_word_counter[0]);


--cnt[12] is cnt[12]
--operation mode is arithmetic

cnt[12]_carry_eqn = A1L34;
cnt[12]_lut_out = cnt[12] $ (!cnt[12]_carry_eqn);
cnt[12] = DFFEAS(cnt[12]_lut_out, clock, VCC, , , , , , );

--A1L54 is cnt[12]~253
--operation mode is arithmetic

A1L54 = CARRY(cnt[12] & (!A1L34));


--A1L38 is freqs[6]~129
--operation mode is normal

A1L38 = sweep & cnt[12] # !sweep & (freq[6]);


--sum[5] is sum[5]
--operation mode is arithmetic

sum[5]_carry_eqn = A1L811;
sum[5]_lut_out = A1L28 $ sum[5] $ sum[5]_carry_eqn;
sum[5] = DFFEAS(sum[5]_lut_out, cnt[6], VCC, , , , , , );

--A1L021 is sum[5]~153
--operation mode is arithmetic

A1L021 = CARRY(A1L28 & !sum[5] & !A1L811 # !A1L28 & (!A1L811 # !sum[5]));


--LB1_state[13] is sld_hub:sld_hub_inst|sld_jtag_state_machine:jtag_state_machine|state[13]
--operation mode is normal

LB1_state[13] = AMPP_FUNCTION(A1L9, LB1_state[12], LB1_state[13], VCC, A1L11);


--K3_dffs[20] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[20]
--operation mode is normal

K3_dffs[20] = AMPP_FUNCTION(A1L9, K3_dffs[21], !B1_reset_all, G1_trigger_setup_ena);


--K3_dffs[21] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[21]
--operation mode is normal

K3_dffs[21] = AMPP_FUNCTION(A1L9, K3_dffs[22], !B1_reset_all, G1_trigger_setup_ena);


--B1_trigger_in_reg is sld_signaltap:FNGDA8_signaltap2|trigger_in_reg
--operation mode is normal

B1_trigger_in_reg = AMPP_FUNCTION(cnt[8], sum[9], VCC);


--Y72_holdff is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_mbpmg:\trigger_in_trigger_module_enabled_gen:trigger_in_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|holdff
--operation mode is normal

Y72_holdff = AMPP_FUNCTION(cnt[8], B1_trigger_in_reg, VCC);


--K3_dffs[22] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[22]
--operation mode is normal

K3_dffs[22] = AMPP_FUNCTION(A1L9, K4_dffs[0], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[36] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[36]
--operation mode is normal

K4_dffs[36] = AMPP_FUNCTION(A1L9, K4_dffs[37], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[37] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[37]
--operation mode is normal

K4_dffs[37] = AMPP_FUNCTION(A1L9, K4_dffs[38], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[38] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[38]
--operation mode is normal

K4_dffs[38] = AMPP_FUNCTION(A1L9, K4_dffs[39], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[0] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[0]
--operation mode is normal

K4_dffs[0] = AMPP_FUNCTION(A1L9, K4_dffs[1], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[1] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[1]
--operation mode is normal

K4_dffs[1] = AMPP_FUNCTION(A1L9, K4_dffs[2], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[2] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[2]
--operation mode is normal

K4_dffs[2] = AMPP_FUNCTION(A1L9, K4_dffs[3], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[3] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[3]
--operation mode is normal

K4_dffs[3] = AMPP_FUNCTION(A1L9, K4_dffs[4], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[4] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[4]
--operation mode is normal

K4_dffs[4] = AMPP_FUNCTION(A1L9, K4_dffs[5], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[5] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[5]
--operation mode is normal

K4_dffs[5] = AMPP_FUNCTION(A1L9, K4_dffs[6], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[6] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[6]
--operation mode is normal

K4_dffs[6] = AMPP_FUNCTION(A1L9, K4_dffs[7], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[7] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[7]
--operation mode is normal

K4_dffs[7] = AMPP_FUNCTION(A1L9, K4_dffs[8], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[8] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[8]
--operation mode is normal

K4_dffs[8] = AMPP_FUNCTION(A1L9, K4_dffs[9], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[9] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[9]
--operation mode is normal

K4_dffs[9] = AMPP_FUNCTION(A1L9, K4_dffs[10], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[10] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[10]
--operation mode is normal

K4_dffs[10] = AMPP_FUNCTION(A1L9, K4_dffs[11], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[11] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[11]
--operation mode is normal

K4_dffs[11] = AMPP_FUNCTION(A1L9, K4_dffs[12], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[12] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[12]
--operation mode is normal

K4_dffs[12] = AMPP_FUNCTION(A1L9, K4_dffs[13], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[13] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[13]
--operation mode is normal

K4_dffs[13] = AMPP_FUNCTION(A1L9, K4_dffs[14], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[14] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[14]
--operation mode is normal

K4_dffs[14] = AMPP_FUNCTION(A1L9, K4_dffs[15], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[15] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[15]
--operation mode is normal

K4_dffs[15] = AMPP_FUNCTION(A1L9, K4_dffs[16], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[16] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[16]
--operation mode is normal

K4_dffs[16] = AMPP_FUNCTION(A1L9, K4_dffs[17], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[17] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[17]
--operation mode is normal

K4_dffs[17] = AMPP_FUNCTION(A1L9, K4_dffs[18], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[18] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[18]
--operation mode is normal

K4_dffs[18] = AMPP_FUNCTION(A1L9, K4_dffs[19], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[19] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[19]
--operation mode is normal

K4_dffs[19] = AMPP_FUNCTION(A1L9, K4_dffs[20], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[20] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[20]
--operation mode is normal

K4_dffs[20] = AMPP_FUNCTION(A1L9, K4_dffs[21], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[21] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[21]
--operation mode is normal

K4_dffs[21] = AMPP_FUNCTION(A1L9, K4_dffs[22], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[22] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[22]
--operation mode is normal

K4_dffs[22] = AMPP_FUNCTION(A1L9, K4_dffs[23], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[23] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[23]
--operation mode is normal

K4_dffs[23] = AMPP_FUNCTION(A1L9, K4_dffs[24], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[24] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[24]
--operation mode is normal

K4_dffs[24] = AMPP_FUNCTION(A1L9, K4_dffs[25], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[25] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[25]
--operation mode is normal

K4_dffs[25] = AMPP_FUNCTION(A1L9, K4_dffs[26], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[26] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[26]
--operation mode is normal

K4_dffs[26] = AMPP_FUNCTION(A1L9, K4_dffs[27], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[27] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[27]
--operation mode is normal

K4_dffs[27] = AMPP_FUNCTION(A1L9, K4_dffs[28], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[28] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[28]
--operation mode is normal

K4_dffs[28] = AMPP_FUNCTION(A1L9, K4_dffs[29], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[29] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[29]
--operation mode is normal

K4_dffs[29] = AMPP_FUNCTION(A1L9, K4_dffs[30], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[33] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[33]
--operation mode is normal

K4_dffs[33] = AMPP_FUNCTION(A1L9, K4_dffs[34], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[34] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[34]
--operation mode is normal

K4_dffs[34] = AMPP_FUNCTION(A1L9, K4_dffs[35], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[35] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[35]
--operation mode is normal

K4_dffs[35] = AMPP_FUNCTION(A1L9, K4_dffs[36], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[31] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[31]
--operation mode is normal

K4_dffs[31] = AMPP_FUNCTION(A1L9, K4_dffs[32], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[30] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[30]
--operation mode is normal

K4_dffs[30] = AMPP_FUNCTION(A1L9, K4_dffs[31], !B1_reset_all, G1_trigger_setup_ena);


--K4_dffs[32] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[32]
--operation mode is normal

K4_dffs[32] = AMPP_FUNCTION(A1L9, K4_dffs[33], !B1_reset_all, G1_trigger_setup_ena);


--F2L72 is sld_hub:sld_hub_inst|sld_rom_sr:HUB_INFO_REG|WORD_SR~141
--operation mode is normal

F2L72 = AMPP_FUNCTION(F2_word_counter[2], F2_word_counter[3]);


--K1_dffs[4] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[4]
--operation mode is normal

K1_dffs[4] = AMPP_FUNCTION(A1L9, K1_dffs[5], GB1_safe_q[3], B1L65, !B1_reset_all);


--GB1_safe_q[2] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[2]
--operation mode is arithmetic

GB1_safe_q[2] = AMPP_FUNCTION(cnt[8], GB1_safe_q[2], !B1_reset_all, G1L1, GB1L4);

--GB1L6 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella2~COUT
--operation mode is arithmetic

GB1L6 = AMPP_FUNCTION(GB1_safe_q[2], GB1L4);


--EB1_safe_q[3] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[3]
--operation mode is arithmetic

EB1_safe_q[3] = AMPP_FUNCTION(cnt[8], EB1_safe_q[3], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L6);

--EB1L8 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella3~COUT
--operation mode is arithmetic

EB1L8 = AMPP_FUNCTION(EB1_safe_q[3], EB1L6);


--EB1_safe_q[10] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[10]
--operation mode is arithmetic

EB1_safe_q[10] = AMPP_FUNCTION(cnt[8], EB1_safe_q[10], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L02);

--EB1L22 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella10~COUT
--operation mode is arithmetic

EB1L22 = AMPP_FUNCTION(EB1_safe_q[10], EB1L02);


--K3_dffs[17] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[17]
--operation mode is normal

K3_dffs[17] = AMPP_FUNCTION(A1L9, K3_dffs[18], !B1_reset_all, G1_trigger_setup_ena);


--K3_dffs[10] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[10]
--operation mode is normal

K3_dffs[10] = AMPP_FUNCTION(A1L9, K3_dffs[11], !B1_reset_all, G1_trigger_setup_ena);


--DB31L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|comptree:sub_comptree|comptree:sub_comptree|cmpchain:cmp_end|aeb_out~91
--operation mode is normal

DB31L2 = AMPP_FUNCTION(EB1_safe_q[3], EB1_safe_q[10], K3_dffs[17], K3_dffs[10]);


--EB1_safe_q[4] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[4]
--operation mode is arithmetic

EB1_safe_q[4] = AMPP_FUNCTION(cnt[8], EB1_safe_q[4], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L8);

--EB1L01 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella4~COUT
--operation mode is arithmetic

EB1L01 = AMPP_FUNCTION(EB1_safe_q[4], EB1L8);


--K3_dffs[11] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[11]
--operation mode is normal

K3_dffs[11] = AMPP_FUNCTION(A1L9, K3_dffs[12], !B1_reset_all, G1_trigger_setup_ena);


--EB1_safe_q[11] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[11]
--operation mode is arithmetic

EB1_safe_q[11] = AMPP_FUNCTION(cnt[8], EB1_safe_q[11], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L22);

--EB1L42 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella11~COUT
--operation mode is arithmetic

EB1L42 = AMPP_FUNCTION(EB1_safe_q[11], EB1L22);


--K3_dffs[18] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[18]
--operation mode is normal

K3_dffs[18] = AMPP_FUNCTION(A1L9, K3_dffs[19], !B1_reset_all, G1_trigger_setup_ena);


--DB8L1 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|cmpchain:cmp[5]|_~1
--operation mode is normal

DB8L1 = AMPP_FUNCTION(EB1_safe_q[11], K3_dffs[18]);


--DB31L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|comptree:sub_comptree|comptree:sub_comptree|cmpchain:cmp_end|aeb_out~92
--operation mode is normal

DB31L3 = AMPP_FUNCTION(DB31L2, EB1_safe_q[4], K3_dffs[11], DB8L1);


--EB1_safe_q[1] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[1]
--operation mode is arithmetic

EB1_safe_q[1] = AMPP_FUNCTION(cnt[8], EB1_safe_q[1], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L2);

--EB1L4 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella1~COUT
--operation mode is arithmetic

EB1L4 = AMPP_FUNCTION(EB1_safe_q[1], EB1L2);


--EB1_safe_q[12] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[12]
--operation mode is normal

EB1_safe_q[12] = AMPP_FUNCTION(cnt[8], EB1_safe_q[12], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L42);


--K3_dffs[19] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[19]
--operation mode is normal

K3_dffs[19] = AMPP_FUNCTION(A1L9, K3_dffs[20], !B1_reset_all, G1_trigger_setup_ena);


--DB31L4 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|comptree:sub_comptree|comptree:sub_comptree|cmpchain:cmp_end|aeb_out~93
--operation mode is normal

DB31L4 = AMPP_FUNCTION(EB1_safe_q[1], EB1_safe_q[12], K3_dffs[19], K3_dffs[8]);


--EB1_safe_q[2] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[2]
--operation mode is arithmetic

EB1_safe_q[2] = AMPP_FUNCTION(cnt[8], EB1_safe_q[2], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L4);

--EB1L6 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella2~COUT
--operation mode is arithmetic

EB1L6 = AMPP_FUNCTION(EB1_safe_q[2], EB1L4);


--EB1_safe_q[5] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[5]
--operation mode is arithmetic

EB1_safe_q[5] = AMPP_FUNCTION(cnt[8], EB1_safe_q[5], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L01);

--EB1L21 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella5~COUT
--operation mode is arithmetic

EB1L21 = AMPP_FUNCTION(EB1_safe_q[5], EB1L01);


--K3_dffs[12] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[12]
--operation mode is normal

K3_dffs[12] = AMPP_FUNCTION(A1L9, K3_dffs[13], !B1_reset_all, G1_trigger_setup_ena);


--K3_dffs[9] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[9]
--operation mode is normal

K3_dffs[9] = AMPP_FUNCTION(A1L9, K3_dffs[10], !B1_reset_all, G1_trigger_setup_ena);


--DB31L5 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|comptree:sub_comptree|comptree:sub_comptree|cmpchain:cmp_end|aeb_out~94
--operation mode is normal

DB31L5 = AMPP_FUNCTION(EB1_safe_q[2], EB1_safe_q[5], K3_dffs[12], K3_dffs[9]);


--EB1_safe_q[7] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[7]
--operation mode is arithmetic

EB1_safe_q[7] = AMPP_FUNCTION(cnt[8], EB1_safe_q[7], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L41);

--EB1L61 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella7~COUT
--operation mode is arithmetic

EB1L61 = AMPP_FUNCTION(EB1_safe_q[7], EB1L41);


--EB1_safe_q[6] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[6]
--operation mode is arithmetic

EB1_safe_q[6] = AMPP_FUNCTION(cnt[8], EB1_safe_q[6], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L21);

--EB1L41 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella6~COUT
--operation mode is arithmetic

EB1L41 = AMPP_FUNCTION(EB1_safe_q[6], EB1L21);


--K3_dffs[13] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[13]
--operation mode is normal

K3_dffs[13] = AMPP_FUNCTION(A1L9, K3_dffs[14], !B1_reset_all, G1_trigger_setup_ena);


--K3_dffs[14] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[14]
--operation mode is normal

K3_dffs[14] = AMPP_FUNCTION(A1L9, K3_dffs[15], !B1_reset_all, G1_trigger_setup_ena);


--DB31L6 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|comptree:sub_comptree|comptree:sub_comptree|cmpchain:cmp_end|aeb_out~95
--operation mode is normal

DB31L6 = AMPP_FUNCTION(EB1_safe_q[7], EB1_safe_q[6], K3_dffs[13], K3_dffs[14]);


--EB1_safe_q[0] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[0]
--operation mode is arithmetic

EB1_safe_q[0] = AMPP_FUNCTION(cnt[8], EB1_safe_q[0], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1);

--EB1L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella0~COUT
--operation mode is arithmetic

EB1L2 = AMPP_FUNCTION(EB1_safe_q[0]);


--EB1_safe_q[8] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[8]
--operation mode is arithmetic

EB1_safe_q[8] = AMPP_FUNCTION(cnt[8], EB1_safe_q[8], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L61);

--EB1L81 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella8~COUT
--operation mode is arithmetic

EB1L81 = AMPP_FUNCTION(EB1_safe_q[8], EB1L61);


--K3_dffs[15] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[15]
--operation mode is normal

K3_dffs[15] = AMPP_FUNCTION(A1L9, K3_dffs[16], !B1_reset_all, G1_trigger_setup_ena);


--DB31L7 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|comptree:sub_comptree|comptree:sub_comptree|cmpchain:cmp_end|aeb_out~96
--operation mode is normal

DB31L7 = AMPP_FUNCTION(EB1_safe_q[0], EB1_safe_q[8], K3_dffs[15], K3_dffs[7]);


--EB1_safe_q[9] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|safe_q[9]
--operation mode is arithmetic

EB1_safe_q[9] = AMPP_FUNCTION(cnt[8], EB1_safe_q[9], T1_segment_write_addr_adv_ena, !B1_reset_all, DB31L1, EB1L81);

--EB1L02 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_counter:\non_zero_sample_depth_gen:segment_addr_counter|cntr_h29:auto_generated|counter_cella9~COUT
--operation mode is arithmetic

EB1L02 = AMPP_FUNCTION(EB1_safe_q[9], EB1L81);


--K3_dffs[16] is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[16]
--operation mode is normal

K3_dffs[16] = AMPP_FUNCTION(A1L9, K3_dffs[17], !B1_reset_all, G1_trigger_setup_ena);


--DB31L8 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|comptree:sub_comptree|comptree:sub_comptree|cmpchain:cmp_end|aeb_out~97
--operation mode is normal

DB31L8 = AMPP_FUNCTION(DB31L6, DB31L7, EB1_safe_q[9], K3_dffs[16]);


--DB31L1 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_segment_mgr:\gen_non_zero_sample_depth_segment:seg_mgr|lpm_compare:\non_zero_sample_depth_gen:segment_addr_compare|comptree:comparator|cmpchain:cmp_end|comptree:comp|comptree:sub_comptree|comptree:sub_comptree|cmpchain:cmp_end|aeb_out~0
--operation mode is normal

DB31L1 = AMPP_FUNCTION(DB31L3, DB31L4, DB31L5, DB31L8);


--GB1_safe_q[11] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[11]
--operation mode is arithmetic

GB1_safe_q[11] = AMPP_FUNCTION(cnt[8], GB1_safe_q[11], !B1_reset_all, G1L1, GB1L22);

--GB1L42 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella11~COUT
--operation mode is arithmetic

GB1L42 = AMPP_FUNCTION(GB1_safe_q[11], GB1L22);


--Z1_counter_cella8 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella8
--operation mode is arithmetic

Z1_counter_cella8 = AMPP_FUNCTION(cnt[8], Z1_counter_cella8, !B1_reset_all, W1_post_trigger_count_enable, Z1L61);

--Z1L81 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella8~COUT
--operation mode is arithmetic

Z1L81 = AMPP_FUNCTION(Z1_counter_cella8, Z1L61);


--F1L91 is sld_signaltap:FNGDA8_signaltap2|sld_rom_sr:crc_rom_sr|WORD_SR~220
--operation mode is normal

F1L91 = AMPP_FUNCTION(F1_word_counter[1], F1_word_counter[0], F1_word_counter[3]);


--cnt[11] is cnt[11]
--operation mode is arithmetic

cnt[11]_carry_eqn = A1L14;
cnt[11]_lut_out = cnt[11] $ (cnt[11]_carry_eqn);
cnt[11] = DFFEAS(cnt[11]_lut_out, clock, VCC, , , , , , );

--A1L34 is cnt[11]~257
--operation mode is arithmetic

A1L34 = CARRY(!A1L14 # !cnt[11]);


--A1L28 is freqs[5]~130
--operation mode is normal

A1L28 = sweep & cnt[11] # !sweep & (freq[5]);


--sum[4] is sum[4]
--operation mode is arithmetic

sum[4]_carry_eqn = A1L611;
sum[4]_lut_out = A1L18 $ sum[4] $ !sum[4]_carry_eqn;
sum[4] = DFFEAS(sum[4]_lut_out, cnt[6], VCC, , , , , , );

--A1L811 is sum[4]~157
--operation mode is arithmetic

A1L811 = CARRY(A1L18 & (sum[4] # !A1L611) # !A1L18 & sum[4] & !A1L611);


--K1_dffs[5] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[5]
--operation mode is normal

K1_dffs[5] = AMPP_FUNCTION(A1L9, K1_dffs[6], GB1_safe_q[4], B1L65, !B1_reset_all);


--GB1_safe_q[3] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[3]
--operation mode is arithmetic

GB1_safe_q[3] = AMPP_FUNCTION(cnt[8], GB1_safe_q[3], !B1_reset_all, G1L1, GB1L6);

--GB1L8 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella3~COUT
--operation mode is arithmetic

GB1L8 = AMPP_FUNCTION(GB1_safe_q[3], GB1L6);


--GB1_safe_q[10] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[10]
--operation mode is arithmetic

GB1_safe_q[10] = AMPP_FUNCTION(cnt[8], GB1_safe_q[10], !B1_reset_all, G1L1, GB1L02);

--GB1L22 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella10~COUT
--operation mode is arithmetic

GB1L22 = AMPP_FUNCTION(GB1_safe_q[10], GB1L02);


--Z1_counter_cella7 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella7
--operation mode is arithmetic

Z1_counter_cella7 = AMPP_FUNCTION(cnt[8], Z1_counter_cella7, !B1_reset_all, W1_post_trigger_count_enable, Z1L41);

--Z1L61 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella7~COUT
--operation mode is arithmetic

Z1L61 = AMPP_FUNCTION(Z1_counter_cella7, Z1L41);


--cnt[10] is cnt[10]
--operation mode is arithmetic

cnt[10]_carry_eqn = A1L93;
cnt[10]_lut_out = cnt[10] $ (!cnt[10]_carry_eqn);
cnt[10] = DFFEAS(cnt[10]_lut_out, clock, VCC, , , , , , );

--A1L14 is cnt[10]~261
--operation mode is arithmetic

A1L14 = CARRY(cnt[10] & (!A1L93));


--A1L18 is freqs[4]~131
--operation mode is normal

A1L18 = sweep & cnt[10] # !sweep & (freq[4]);


--sum[3] is sum[3]
--operation mode is arithmetic

sum[3]_carry_eqn = A1L411;
sum[3]_lut_out = A1L08 $ sum[3] $ sum[3]_carry_eqn;
sum[3] = DFFEAS(sum[3]_lut_out, cnt[6], VCC, , , , , , );

--A1L611 is sum[3]~161
--operation mode is arithmetic

A1L611 = CARRY(A1L08 & !sum[3] & !A1L411 # !A1L08 & (!A1L411 # !sum[3]));


--K1_dffs[6] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[6]
--operation mode is normal

K1_dffs[6] = AMPP_FUNCTION(A1L9, K1_dffs[7], GB1_safe_q[5], B1L65, !B1_reset_all);


--GB1_safe_q[4] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[4]
--operation mode is arithmetic

GB1_safe_q[4] = AMPP_FUNCTION(cnt[8], GB1_safe_q[4], !B1_reset_all, G1L1, GB1L8);

--GB1L01 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella4~COUT
--operation mode is arithmetic

GB1L01 = AMPP_FUNCTION(GB1_safe_q[4], GB1L8);


--GB1_safe_q[9] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[9]
--operation mode is arithmetic

GB1_safe_q[9] = AMPP_FUNCTION(cnt[8], GB1_safe_q[9], !B1_reset_all, G1L1, GB1L81);

--GB1L02 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella9~COUT
--operation mode is arithmetic

GB1L02 = AMPP_FUNCTION(GB1_safe_q[9], GB1L81);


--Z1_counter_cella6 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella6
--operation mode is arithmetic

Z1_counter_cella6 = AMPP_FUNCTION(cnt[8], Z1_counter_cella6, !B1_reset_all, W1_post_trigger_count_enable, Z1L21);

--Z1L41 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella6~COUT
--operation mode is arithmetic

Z1L41 = AMPP_FUNCTION(Z1_counter_cella6, Z1L21);


--cnt[9] is cnt[9]
--operation mode is arithmetic

cnt[9]_carry_eqn = A1L73;
cnt[9]_lut_out = cnt[9] $ (cnt[9]_carry_eqn);
cnt[9] = DFFEAS(cnt[9]_lut_out, clock, VCC, , , , , , );

--A1L93 is cnt[9]~265
--operation mode is arithmetic

A1L93 = CARRY(!A1L73 # !cnt[9]);


--A1L08 is freqs[3]~132
--operation mode is normal

A1L08 = sweep & cnt[9] # !sweep & (freq[3]);


--sum[2] is sum[2]
--operation mode is arithmetic

sum[2]_carry_eqn = A1L211;
sum[2]_lut_out = A1L97 $ sum[2] $ !sum[2]_carry_eqn;
sum[2] = DFFEAS(sum[2]_lut_out, cnt[6], VCC, , , , , , );

--A1L411 is sum[2]~165
--operation mode is arithmetic

A1L411 = CARRY(A1L97 & (sum[2] # !A1L211) # !A1L97 & sum[2] & !A1L211);


--K1_dffs[7] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[7]
--operation mode is normal

K1_dffs[7] = AMPP_FUNCTION(A1L9, K1_dffs[8], GB1_safe_q[6], B1L65, !B1_reset_all);


--GB1_safe_q[5] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[5]
--operation mode is arithmetic

GB1_safe_q[5] = AMPP_FUNCTION(cnt[8], GB1_safe_q[5], !B1_reset_all, G1L1, GB1L01);

--GB1L21 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella5~COUT
--operation mode is arithmetic

GB1L21 = AMPP_FUNCTION(GB1_safe_q[5], GB1L01);


--GB1_safe_q[8] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[8]
--operation mode is arithmetic

GB1_safe_q[8] = AMPP_FUNCTION(cnt[8], GB1_safe_q[8], !B1_reset_all, G1L1, GB1L61);

--GB1L81 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella8~COUT
--operation mode is arithmetic

GB1L81 = AMPP_FUNCTION(GB1_safe_q[8], GB1L61);


--Z1_counter_cella5 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella5
--operation mode is arithmetic

Z1_counter_cella5 = AMPP_FUNCTION(cnt[8], Z1_counter_cella5, !B1_reset_all, W1_post_trigger_count_enable, Z1L01);

--Z1L21 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella5~COUT
--operation mode is arithmetic

Z1L21 = AMPP_FUNCTION(Z1_counter_cella5, Z1L01);


--A1L97 is freqs[2]~133
--operation mode is normal

A1L97 = sweep & cnt[8] # !sweep & (freq[2]);


--sum[1] is sum[1]
--operation mode is arithmetic

sum[1]_carry_eqn = A1L011;
sum[1]_lut_out = A1L87 $ sum[1] $ sum[1]_carry_eqn;
sum[1] = DFFEAS(sum[1]_lut_out, cnt[6], VCC, , , , , , );

--A1L211 is sum[1]~169
--operation mode is arithmetic

A1L211 = CARRY(A1L87 & !sum[1] & !A1L011 # !A1L87 & (!A1L011 # !sum[1]));


--K1_dffs[8] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[8]
--operation mode is normal

K1_dffs[8] = AMPP_FUNCTION(A1L9, K1_dffs[9], GB1_safe_q[7], B1L65, !B1_reset_all);


--GB1_safe_q[6] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[6]
--operation mode is arithmetic

GB1_safe_q[6] = AMPP_FUNCTION(cnt[8], GB1_safe_q[6], !B1_reset_all, G1L1, GB1L21);

--GB1L41 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella6~COUT
--operation mode is arithmetic

GB1L41 = AMPP_FUNCTION(GB1_safe_q[6], GB1L21);


--GB1_safe_q[7] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|safe_q[7]
--operation mode is arithmetic

GB1_safe_q[7] = AMPP_FUNCTION(cnt[8], GB1_safe_q[7], !B1_reset_all, G1L1, GB1L41);

--GB1L61 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_counter:\write_address_non_zero_gen:write_pointer_counter|cntr_7u9:auto_generated|counter_cella7~COUT
--operation mode is arithmetic

GB1L61 = AMPP_FUNCTION(GB1_safe_q[7], GB1L41);


--Z1_counter_cella4 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella4
--operation mode is arithmetic

Z1_counter_cella4 = AMPP_FUNCTION(cnt[8], Z1_counter_cella4, !B1_reset_all, W1_post_trigger_count_enable, Z1L8);

--Z1L01 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella4~COUT
--operation mode is arithmetic

Z1L01 = AMPP_FUNCTION(Z1_counter_cella4, Z1L8);


--A1L87 is freqs[1]~134
--operation mode is normal

A1L87 = sweep # freq[1];


--sum[0] is sum[0]
--operation mode is arithmetic

sum[0]_lut_out = A1L77 $ sum[0];
sum[0] = DFFEAS(sum[0]_lut_out, cnt[6], VCC, , , , , , );

--A1L011 is sum[0]~173
--operation mode is arithmetic

A1L011 = CARRY(A1L77 & sum[0]);


--K1_dffs[9] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[9]
--operation mode is normal

K1_dffs[9] = AMPP_FUNCTION(A1L9, K1_dffs[10], GB1_safe_q[8], B1L65, !B1_reset_all);


--Z1_counter_cella3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella3
--operation mode is arithmetic

Z1_counter_cella3 = AMPP_FUNCTION(cnt[8], Z1_counter_cella3, !B1_reset_all, W1_post_trigger_count_enable, Z1L6);

--Z1L8 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella3~COUT
--operation mode is arithmetic

Z1L8 = AMPP_FUNCTION(Z1_counter_cella3, Z1L6);


--A1L77 is freqs[0]~135
--operation mode is normal

A1L77 = sweep # freq[0];


--K1_dffs[10] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[10]
--operation mode is normal

K1_dffs[10] = AMPP_FUNCTION(A1L9, K1_dffs[11], GB1_safe_q[9], B1L65, !B1_reset_all);


--Z1_counter_cella2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella2
--operation mode is arithmetic

Z1_counter_cella2 = AMPP_FUNCTION(cnt[8], Z1_counter_cella2, !B1_reset_all, W1_post_trigger_count_enable, Z1L4);

--Z1L6 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella2~COUT
--operation mode is arithmetic

Z1L6 = AMPP_FUNCTION(Z1_counter_cella2, Z1L4);


--K1_dffs[11] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[11]
--operation mode is normal

K1_dffs[11] = AMPP_FUNCTION(A1L9, K1_dffs[12], GB1_safe_q[10], B1L65, !B1_reset_all);


--Z1_counter_cella1 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella1
--operation mode is arithmetic

Z1_counter_cella1 = AMPP_FUNCTION(cnt[8], Z1_counter_cella1, !B1_reset_all, W1_post_trigger_count_enable, Z1L2);

--Z1L4 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella1~COUT
--operation mode is arithmetic

Z1L4 = AMPP_FUNCTION(Z1_counter_cella1, Z1L2);


--K1_dffs[12] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[12]
--operation mode is normal

K1_dffs[12] = AMPP_FUNCTION(A1L9, K1_dffs[13], GB1_safe_q[11], B1L65, !B1_reset_all);


--Z1_counter_cella0 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella0
--operation mode is arithmetic

Z1_counter_cella0 = AMPP_FUNCTION(cnt[8], Z1_counter_cella0, !B1_reset_all, W1_post_trigger_count_enable);

--Z1L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_post_trigger_counter:\gen_non_zero_sample_depth:tc1|lpm_counter:post_trigger_counter|cntr_po8:auto_generated|counter_cella0~COUT
--operation mode is arithmetic

Z1L2 = AMPP_FUNCTION(Z1_counter_cella0);


--K1_dffs[13] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[13]
--operation mode is normal

K1_dffs[13] = AMPP_FUNCTION(A1L9, K1_dffs[14], GB1_safe_q[12], B1L65, !B1_reset_all);


--K1_dffs[14] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[14]
--operation mode is normal

K1_dffs[14] = AMPP_FUNCTION(A1L9, K1_dffs[15], FB1_dffs[0], B1L65, !B1_reset_all);


--K1_dffs[15] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[15]
--operation mode is normal

K1_dffs[15] = AMPP_FUNCTION(A1L9, K1_dffs[16], FB1_dffs[1], B1L65, !B1_reset_all);


--FB1_dffs[0] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[0]
--operation mode is normal

FB1_dffs[0] = AMPP_FUNCTION(cnt[8], GB1_safe_q[0], !B1_reset_all, H1L4);


--K1_dffs[16] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[16]
--operation mode is normal

K1_dffs[16] = AMPP_FUNCTION(A1L9, K1_dffs[17], FB1_dffs[2], B1L65, !B1_reset_all);


--FB1_dffs[1] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[1]
--operation mode is normal

FB1_dffs[1] = AMPP_FUNCTION(cnt[8], GB1_safe_q[1], !B1_reset_all, H1L4);


--K1_dffs[17] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[17]
--operation mode is normal

K1_dffs[17] = AMPP_FUNCTION(A1L9, K1_dffs[18], FB1_dffs[3], B1L65, !B1_reset_all);


--FB1_dffs[2] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[2]
--operation mode is normal

FB1_dffs[2] = AMPP_FUNCTION(cnt[8], GB1_safe_q[2], !B1_reset_all, H1L4);


--K1_dffs[18] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[18]
--operation mode is normal

K1_dffs[18] = AMPP_FUNCTION(A1L9, K1_dffs[19], FB1_dffs[4], B1L65, !B1_reset_all);


--FB1_dffs[3] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[3]
--operation mode is normal

FB1_dffs[3] = AMPP_FUNCTION(cnt[8], GB1_safe_q[3], !B1_reset_all, H1L4);


--K1_dffs[19] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[19]
--operation mode is normal

K1_dffs[19] = AMPP_FUNCTION(A1L9, K1_dffs[20], FB1_dffs[5], B1L65, !B1_reset_all);


--FB1_dffs[4] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[4]
--operation mode is normal

FB1_dffs[4] = AMPP_FUNCTION(cnt[8], GB1_safe_q[4], !B1_reset_all, H1L4);


--K1_dffs[20] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[20]
--operation mode is normal

K1_dffs[20] = AMPP_FUNCTION(A1L9, K1_dffs[21], FB1_dffs[6], B1L65, !B1_reset_all);


--FB1_dffs[5] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[5]
--operation mode is normal

FB1_dffs[5] = AMPP_FUNCTION(cnt[8], GB1_safe_q[5], !B1_reset_all, H1L4);


--K1_dffs[21] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[21]
--operation mode is normal

K1_dffs[21] = AMPP_FUNCTION(A1L9, K1_dffs[22], FB1_dffs[7], B1L65, !B1_reset_all);


--FB1_dffs[6] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[6]
--operation mode is normal

FB1_dffs[6] = AMPP_FUNCTION(cnt[8], GB1_safe_q[6], !B1_reset_all, H1L4);


--K1_dffs[22] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[22]
--operation mode is normal

K1_dffs[22] = AMPP_FUNCTION(A1L9, K1_dffs[23], FB1_dffs[8], B1L65, !B1_reset_all);


--FB1_dffs[7] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[7]
--operation mode is normal

FB1_dffs[7] = AMPP_FUNCTION(cnt[8], GB1_safe_q[7], !B1_reset_all, H1L4);


--K1_dffs[23] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[23]
--operation mode is normal

K1_dffs[23] = AMPP_FUNCTION(A1L9, K1_dffs[24], FB1_dffs[9], B1L65, !B1_reset_all);


--FB1_dffs[8] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[8]
--operation mode is normal

FB1_dffs[8] = AMPP_FUNCTION(cnt[8], GB1_safe_q[8], !B1_reset_all, H1L4);


--K1_dffs[24] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[24]
--operation mode is normal

K1_dffs[24] = AMPP_FUNCTION(A1L9, K1_dffs[25], FB1_dffs[10], B1L65, !B1_reset_all);


--FB1_dffs[9] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[9]
--operation mode is normal

FB1_dffs[9] = AMPP_FUNCTION(cnt[8], GB1_safe_q[9], !B1_reset_all, H1L4);


--K1_dffs[25] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[25]
--operation mode is normal

K1_dffs[25] = AMPP_FUNCTION(A1L9, K1_dffs[26], FB1_dffs[11], B1L65, !B1_reset_all);


--FB1_dffs[10] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[10]
--operation mode is normal

FB1_dffs[10] = AMPP_FUNCTION(cnt[8], GB1_safe_q[10], !B1_reset_all, H1L4);


--K1_dffs[26] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[26]
--operation mode is normal

K1_dffs[26] = AMPP_FUNCTION(A1L9, K2_dffs[0], FB1_dffs[12], B1L65, !B1_reset_all);


--FB1_dffs[11] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[11]
--operation mode is normal

FB1_dffs[11] = AMPP_FUNCTION(cnt[8], GB1_safe_q[11], !B1_reset_all, H1L4);


--K2_dffs[0] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[0]
--operation mode is normal

K2_dffs[0] = AMPP_FUNCTION(A1L9, N1_ram_block1a0, N1_ram_block1a19, K2_dffs[1], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--FB1_dffs[12] is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|lpm_ff:\gen_non_zero_sample_depth:trigger_address_register|dffs[12]
--operation mode is normal

FB1_dffs[12] = AMPP_FUNCTION(cnt[8], GB1_safe_q[12], !B1_reset_all, H1L4);


--N1_ram_block1a0 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a0
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a0 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][0], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a19 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a19
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a19 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][0], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[1] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[1]
--operation mode is normal

K2_dffs[1] = AMPP_FUNCTION(A1L9, N1_ram_block1a1, N1_ram_block1a20, K2_dffs[2], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--N1_address_reg_b[0] is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|address_reg_b[0]
--operation mode is normal

N1_address_reg_b[0] = AMPP_FUNCTION(A1L9, M1_safe_q[12], VCC, JB1_Q[4]);


--L1_safe_q[1] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|safe_q[1]
--operation mode is arithmetic

L1_safe_q[1] = AMPP_FUNCTION(A1L9, L1_safe_q[1], ~GND, !E1_offload_shift_ena, L1_modulus_trigger, L1L2);

--L1L4 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|counter_cella1~COUT
--operation mode is arithmetic

L1L4 = AMPP_FUNCTION(L1_safe_q[1], L1L2);


--L1_safe_q[4] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|safe_q[4]
--operation mode is arithmetic

L1_safe_q[4] = AMPP_FUNCTION(A1L9, L1_safe_q[4], ~GND, !E1_offload_shift_ena, L1_modulus_trigger, L1L8);

--L1L01 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|counter_cella4~COUT
--operation mode is arithmetic

L1L01 = AMPP_FUNCTION(L1_safe_q[4], L1L8);


--L1_safe_q[2] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|safe_q[2]
--operation mode is arithmetic

L1_safe_q[2] = AMPP_FUNCTION(A1L9, L1_safe_q[2], ~GND, !E1_offload_shift_ena, L1_modulus_trigger, L1L4);

--L1L6 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|counter_cella2~COUT
--operation mode is arithmetic

L1L6 = AMPP_FUNCTION(L1_safe_q[2], L1L4);


--L1_safe_q[3] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|safe_q[3]
--operation mode is arithmetic

L1_safe_q[3] = AMPP_FUNCTION(A1L9, L1_safe_q[3], ~GND, !E1_offload_shift_ena, L1_modulus_trigger, L1L6);

--L1L8 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|counter_cella3~COUT
--operation mode is arithmetic

L1L8 = AMPP_FUNCTION(L1_safe_q[3], L1L6);


--E1L6 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|reduce_nor~45
--operation mode is normal

E1L6 = AMPP_FUNCTION(L1_safe_q[4], L1_safe_q[2], L1_safe_q[3]);


--L1_safe_q[0] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|safe_q[0]
--operation mode is arithmetic

L1_safe_q[0] = AMPP_FUNCTION(A1L9, L1_safe_q[0], ~GND, !E1_offload_shift_ena, L1_modulus_trigger);

--L1L2 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|counter_cella0~COUT
--operation mode is arithmetic

L1L2 = AMPP_FUNCTION(L1_safe_q[0]);


--E1_offload_shift_ena is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|offload_shift_ena
--operation mode is normal

E1_offload_shift_ena = AMPP_FUNCTION(LB1_state[4], JB1_Q[4], D1L23, D1_jtag_debug_mode_usr1);


--E1_ram_shift_load is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|ram_shift_load
--operation mode is normal

E1_ram_shift_load = AMPP_FUNCTION(L1_safe_q[1], E1L6, L1_safe_q[0], E1_offload_shift_ena);


--P1L1 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|decode_fga:decode2|eq_node[0]~88
--operation mode is normal

P1L1 = AMPP_FUNCTION(X1L5, W1_buffer_write_enable, K3_dffs[6], GB1_safe_q[12]);


--B1_acq_data_in_pipe_reg[2][0] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][0]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][0] = AMPP_FUNCTION(cnt[8], Y41_holdff, VCC);


--M1_safe_q[0] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[0]
--operation mode is arithmetic

M1_safe_q[0] = AMPP_FUNCTION(A1L9, M1_safe_q[0], !E1L1, E1L4);

--M1L2 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella0~COUT
--operation mode is arithmetic

M1L2 = AMPP_FUNCTION(M1_safe_q[0]);


--M1_safe_q[1] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[1]
--operation mode is arithmetic

M1_safe_q[1] = AMPP_FUNCTION(A1L9, M1_safe_q[1], !E1L1, E1L4, M1L2);

--M1L4 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella1~COUT
--operation mode is arithmetic

M1L4 = AMPP_FUNCTION(M1_safe_q[1], M1L2);


--M1_safe_q[2] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[2]
--operation mode is arithmetic

M1_safe_q[2] = AMPP_FUNCTION(A1L9, M1_safe_q[2], !E1L1, E1L4, M1L4);

--M1L6 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella2~COUT
--operation mode is arithmetic

M1L6 = AMPP_FUNCTION(M1_safe_q[2], M1L4);


--M1_safe_q[3] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[3]
--operation mode is arithmetic

M1_safe_q[3] = AMPP_FUNCTION(A1L9, M1_safe_q[3], !E1L1, E1L4, M1L6);

--M1L8 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella3~COUT
--operation mode is arithmetic

M1L8 = AMPP_FUNCTION(M1_safe_q[3], M1L6);


--M1_safe_q[4] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[4]
--operation mode is arithmetic

M1_safe_q[4] = AMPP_FUNCTION(A1L9, M1_safe_q[4], !E1L1, E1L4, M1L8);

--M1L01 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella4~COUT
--operation mode is arithmetic

M1L01 = AMPP_FUNCTION(M1_safe_q[4], M1L8);


--M1_safe_q[5] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[5]
--operation mode is arithmetic

M1_safe_q[5] = AMPP_FUNCTION(A1L9, M1_safe_q[5], !E1L1, E1L4, M1L01);

--M1L21 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella5~COUT
--operation mode is arithmetic

M1L21 = AMPP_FUNCTION(M1_safe_q[5], M1L01);


--M1_safe_q[6] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[6]
--operation mode is arithmetic

M1_safe_q[6] = AMPP_FUNCTION(A1L9, M1_safe_q[6], !E1L1, E1L4, M1L21);

--M1L41 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella6~COUT
--operation mode is arithmetic

M1L41 = AMPP_FUNCTION(M1_safe_q[6], M1L21);


--M1_safe_q[7] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[7]
--operation mode is arithmetic

M1_safe_q[7] = AMPP_FUNCTION(A1L9, M1_safe_q[7], !E1L1, E1L4, M1L41);

--M1L61 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella7~COUT
--operation mode is arithmetic

M1L61 = AMPP_FUNCTION(M1_safe_q[7], M1L41);


--M1_safe_q[8] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[8]
--operation mode is arithmetic

M1_safe_q[8] = AMPP_FUNCTION(A1L9, M1_safe_q[8], !E1L1, E1L4, M1L61);

--M1L81 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella8~COUT
--operation mode is arithmetic

M1L81 = AMPP_FUNCTION(M1_safe_q[8], M1L61);


--M1_safe_q[9] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[9]
--operation mode is arithmetic

M1_safe_q[9] = AMPP_FUNCTION(A1L9, M1_safe_q[9], !E1L1, E1L4, M1L81);

--M1L02 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella9~COUT
--operation mode is arithmetic

M1L02 = AMPP_FUNCTION(M1_safe_q[9], M1L81);


--M1_safe_q[10] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[10]
--operation mode is arithmetic

M1_safe_q[10] = AMPP_FUNCTION(A1L9, M1_safe_q[10], !E1L1, E1L4, M1L02);

--M1L22 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella10~COUT
--operation mode is arithmetic

M1L22 = AMPP_FUNCTION(M1_safe_q[10], M1L02);


--M1_safe_q[11] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[11]
--operation mode is arithmetic

M1_safe_q[11] = AMPP_FUNCTION(A1L9, M1_safe_q[11], !E1L1, E1L4, M1L22);

--M1L42 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|counter_cella11~COUT
--operation mode is arithmetic

M1L42 = AMPP_FUNCTION(M1_safe_q[11], M1L22);


--P1L2 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|decode_fga:decode2|eq_node[1]~89
--operation mode is normal

P1L2 = AMPP_FUNCTION(GB1_safe_q[12], X1L5, W1_buffer_write_enable, K3_dffs[6]);


--N1_ram_block1a1 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a1
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a1 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][1], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a20 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a20
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a20 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][1], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[2] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[2]
--operation mode is normal

K2_dffs[2] = AMPP_FUNCTION(A1L9, N1_ram_block1a2, N1_ram_block1a21, K2_dffs[3], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--M1_safe_q[12] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_tn7:auto_generated|safe_q[12]
--operation mode is normal

M1_safe_q[12] = AMPP_FUNCTION(A1L9, M1_safe_q[12], !E1L1, E1L4, M1L42);


--L1_modulus_trigger is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_hv7:auto_generated|modulus_trigger
--operation mode is normal

L1_modulus_trigger = AMPP_FUNCTION(E1L5, L1L01);


--E1L1 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|acq_buf_read_reset~29
--operation mode is normal

E1L1 = AMPP_FUNCTION(B1_reset_all, JB1_Q[1], JB1_Q[4], B1L94);


--E1L4 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|reduce_nor~0
--operation mode is normal

E1L4 = AMPP_FUNCTION(L1_safe_q[1], L1_safe_q[0], E1L6);


--B1_acq_data_in_pipe_reg[2][1] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][1]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][1] = AMPP_FUNCTION(cnt[8], Y51_holdff, VCC);


--N1_ram_block1a2 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a2
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a2 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][2], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a21 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a21
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a21 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][2], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[3] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[3]
--operation mode is normal

K2_dffs[3] = AMPP_FUNCTION(A1L9, N1_ram_block1a3, N1_ram_block1a22, K2_dffs[4], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--E1L5 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|reduce_nor~1
--operation mode is normal

E1L5 = AMPP_FUNCTION(L1_safe_q[0], L1_safe_q[1], E1L6);


--B1_acq_data_in_pipe_reg[2][2] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][2]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][2] = AMPP_FUNCTION(cnt[8], Y61_holdff, VCC);


--N1_ram_block1a3 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a3
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a3 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][3], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a22 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a22
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a22 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][3], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[4] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[4]
--operation mode is normal

K2_dffs[4] = AMPP_FUNCTION(A1L9, N1_ram_block1a4, N1_ram_block1a23, K2_dffs[5], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][3] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][3]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][3] = AMPP_FUNCTION(cnt[8], Y71_holdff, VCC);


--N1_ram_block1a4 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a4
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a4 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][4], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a23 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a23
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a23 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][4], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[5] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[5]
--operation mode is normal

K2_dffs[5] = AMPP_FUNCTION(A1L9, N1_ram_block1a5, N1_ram_block1a24, K2_dffs[6], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][4] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][4]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][4] = AMPP_FUNCTION(cnt[8], Y81_holdff, VCC);


--N1_ram_block1a5 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a5
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a5 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][5], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a24 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a24
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a24 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][5], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[6] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[6]
--operation mode is normal

K2_dffs[6] = AMPP_FUNCTION(A1L9, N1_ram_block1a6, N1_ram_block1a25, K2_dffs[7], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][5] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][5]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][5] = AMPP_FUNCTION(cnt[8], Y91_holdff, VCC);


--N1_ram_block1a6 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a6
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a6 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][6], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a25 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a25
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a25 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][6], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[7] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[7]
--operation mode is normal

K2_dffs[7] = AMPP_FUNCTION(A1L9, N1_ram_block1a7, N1_ram_block1a26, K2_dffs[8], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][6] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][6]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][6] = AMPP_FUNCTION(cnt[8], Y02_holdff, VCC);


--N1_ram_block1a7 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a7
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a7 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][7], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a26 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a26
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a26 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][7], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[8] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[8]
--operation mode is normal

K2_dffs[8] = AMPP_FUNCTION(A1L9, N1_ram_block1a8, N1_ram_block1a27, K2_dffs[9], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][7] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][7]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][7] = AMPP_FUNCTION(cnt[8], Y12_holdff, VCC);


--N1_ram_block1a8 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a8
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a8 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][8], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a27 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a27
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a27 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][8], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[9] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[9]
--operation mode is normal

K2_dffs[9] = AMPP_FUNCTION(A1L9, N1_ram_block1a9, N1_ram_block1a28, K2_dffs[10], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][8] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][8]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][8] = AMPP_FUNCTION(cnt[8], Y22_holdff, VCC);


--N1_ram_block1a9 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a9
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a9 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][9], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a28 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a28
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a28 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][9], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[10] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[10]
--operation mode is normal

K2_dffs[10] = AMPP_FUNCTION(A1L9, N1_ram_block1a10, N1_ram_block1a29, K2_dffs[11], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][9] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][9]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][9] = AMPP_FUNCTION(cnt[8], Y32_holdff, VCC);


--N1_ram_block1a10 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a10
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a10 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][10], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a29 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a29
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a29 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][10], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[11] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[11]
--operation mode is normal

K2_dffs[11] = AMPP_FUNCTION(A1L9, N1_ram_block1a11, N1_ram_block1a30, K2_dffs[12], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][10] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][10]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][10] = AMPP_FUNCTION(cnt[8], Y62_holdff, VCC);


--N1_ram_block1a11 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a11
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a11 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][11], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a30 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a30
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a30 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][11], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[12] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[12]
--operation mode is normal

K2_dffs[12] = AMPP_FUNCTION(A1L9, N1_ram_block1a12, N1_ram_block1a31, K2_dffs[13], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[2][11] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][11]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][11] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_pipe_reg[1][11], VCC);


--N1_ram_block1a12 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a12
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a12 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][12], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a31 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a31
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a31 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][12], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[13] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[13]
--operation mode is normal

K2_dffs[13] = AMPP_FUNCTION(A1L9, N1_ram_block1a13, N1_ram_block1a32, K2_dffs[14], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_pipe_reg[1][11] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[1][11]
--operation mode is normal

B1_acq_data_in_pipe_reg[1][11] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_reg[11], VCC);


--B1_acq_data_in_pipe_reg[2][12] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][12]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][12] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_pipe_reg[1][12], VCC);


--N1_ram_block1a13 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a13
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a13 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][13], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a32 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a32
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a32 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][13], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[14] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[14]
--operation mode is normal

K2_dffs[14] = AMPP_FUNCTION(A1L9, N1_ram_block1a14, N1_ram_block1a33, K2_dffs[15], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_reg[11] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_reg[11]
--operation mode is normal

B1_acq_data_in_reg[11] = AMPP_FUNCTION(cnt[8], sum[10], VCC);


--B1_acq_data_in_pipe_reg[1][12] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[1][12]
--operation mode is normal

B1_acq_data_in_pipe_reg[1][12] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_reg[12], VCC);


--B1_acq_data_in_pipe_reg[2][13] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][13]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][13] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_pipe_reg[1][13], VCC);


--N1_ram_block1a14 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a14
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a14 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][14], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a33 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a33
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a33 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][14], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[15] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[15]
--operation mode is normal

K2_dffs[15] = AMPP_FUNCTION(A1L9, N1_ram_block1a15, N1_ram_block1a34, K2_dffs[16], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_reg[12] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_reg[12]
--operation mode is normal

B1_acq_data_in_reg[12] = AMPP_FUNCTION(cnt[8], sum[11], VCC);


--B1_acq_data_in_pipe_reg[1][13] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[1][13]
--operation mode is normal

B1_acq_data_in_pipe_reg[1][13] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_reg[13], VCC);


--B1_acq_data_in_pipe_reg[2][14] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][14]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][14] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_pipe_reg[1][14], VCC);


--N1_ram_block1a15 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a15
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a15 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][15], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a34 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a34
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a34 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][15], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[16] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[16]
--operation mode is normal

K2_dffs[16] = AMPP_FUNCTION(A1L9, N1_ram_block1a16, N1_ram_block1a35, K2_dffs[17], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_reg[13] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_reg[13]
--operation mode is normal

B1_acq_data_in_reg[13] = AMPP_FUNCTION(cnt[8], sum[12], VCC);


--B1_acq_data_in_pipe_reg[1][14] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[1][14]
--operation mode is normal

B1_acq_data_in_pipe_reg[1][14] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_reg[14], VCC);


--B1_acq_data_in_pipe_reg[2][15] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][15]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][15] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_pipe_reg[1][15], VCC);


--N1_ram_block1a16 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a16
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a16 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][16], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a35 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a35
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a35 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][16], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[17] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[17]
--operation mode is normal

K2_dffs[17] = AMPP_FUNCTION(A1L9, N1_ram_block1a17, N1_ram_block1a36, K2_dffs[18], N1_address_reg_b[0], !B1_reset_all, E1_ram_shift_load);


--B1_acq_data_in_reg[14] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_reg[14]
--operation mode is normal

B1_acq_data_in_reg[14] = AMPP_FUNCTION(cnt[8], sum[13], VCC);


--B1_acq_data_in_pipe_reg[1][15] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[1][15]
--operation mode is normal

B1_acq_data_in_pipe_reg[1][15] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_reg[15], VCC);


--B1_acq_data_in_pipe_reg[2][16] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][16]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][16] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_pipe_reg[1][16], VCC);


--N1_ram_block1a17 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a17
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a17 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1_acq_data_in_pipe_reg[2][17], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a36 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a36
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a36 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1_acq_data_in_pipe_reg[2][17], GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2_dffs[18] is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[18]
--operation mode is normal

K2_dffs[18] = AMPP_FUNCTION(A1L9, K2L1, E1_offload_shift_ena, E1L5, !B1_reset_all);


--B1_acq_data_in_reg[15] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_reg[15]
--operation mode is normal

B1_acq_data_in_reg[15] = AMPP_FUNCTION(cnt[8], sum[14], VCC);


--B1_acq_data_in_pipe_reg[1][16] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[1][16]
--operation mode is normal

B1_acq_data_in_pipe_reg[1][16] = AMPP_FUNCTION(cnt[8], B1_acq_data_in_reg[16], VCC);


--B1_acq_data_in_pipe_reg[2][17] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][17]
--operation mode is normal

B1_acq_data_in_pipe_reg[2][17] = AMPP_FUNCTION(cnt[8], Y52_holdff, VCC);


--N1_ram_block1a37 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a37
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a37 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L2, JB1_Q[4], B1L02, GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--N1_ram_block1a18 is sld_signaltap:FNGDA8_signaltap2|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_di92:auto_generated|ram_block1a18
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 4096, Port A Width: 1, Port B Depth: 4096, Port B Width: 1
--Port A Logical Depth: 8192, Port A Logical Width: 19, Port B Logical Depth: 8192, Port B Logical Width: 19
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
N1_ram_block1a18 = AMPP_FUNCTION(GND, GND, cnt[8], A1L9, P1L1, JB1_Q[4], B1L02, GB1_safe_q[0], GB1_safe_q[1], GB1_safe_q[2], GB1_safe_q[3], GB1_safe_q[4], GB1_safe_q[5], GB1_safe_q[6], GB1_safe_q[7], GB1_safe_q[8], GB1_safe_q[9], GB1_safe_q[10], GB1_safe_q[11], M1_safe_q[0], M1_safe_q[1], M1_safe_q[2], M1_safe_q[3], M1_safe_q[4], M1_safe_q[5], M1_safe_q[6], M1_safe_q[7], M1_safe_q[8], M1_safe_q[9], M1_safe_q[10], M1_safe_q[11]);


--K2L1 is sld_signaltap:FNGDA8_signaltap2|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|_~848
--operation mode is normal

K2L1 = AMPP_FUNCTION(N1_ram_block1a37, N1_ram_block1a18, N1_address_reg_b[0]);


--B1_acq_data_in_reg[16] is sld_signaltap:FNGDA8_signaltap2|acq_data_in_reg[16]
--operation mode is normal

B1_acq_data_in_reg[16] = AMPP_FUNCTION(cnt[8], sum[15], VCC);


--H1L4 is sld_signaltap:FNGDA8_signaltap2|sld_acquisition_buffer:sld_acquisition_buffer_inst|trigger_write_addr_latch_ena~51
--operation mode is normal

H1L4 = AMPP_FUNCTION(X1_status_out[1], W1_buffer_write_enable, K3_dffs[6], G1L2);


--Y11L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:10:sm1|p_match_out~201
--operation mode is normal

Y11L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[12], K4_dffs[32], K4_dffs[30], K4_dffs[31]);


--Y21L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:11:sm1|p_match_out~201
--operation mode is normal

Y21L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[11], K4_dffs[35], K4_dffs[34], K4_dffs[33]);


--Y01L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:9:sm1|p_match_out~201
--operation mode is normal

Y01L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[9], K4_dffs[29], K4_dffs[28], K4_dffs[27]);


--Y9L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:8:sm1|p_match_out~201
--operation mode is normal

Y9L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[8], K4_dffs[26], K4_dffs[25], K4_dffs[24]);


--Y8L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:7:sm1|p_match_out~201
--operation mode is normal

Y8L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[7], K4_dffs[23], K4_dffs[22], K4_dffs[21]);


--Y7L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:6:sm1|p_match_out~201
--operation mode is normal

Y7L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[6], K4_dffs[20], K4_dffs[19], K4_dffs[18]);


--Y6L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:5:sm1|p_match_out~201
--operation mode is normal

Y6L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[5], K4_dffs[17], K4_dffs[16], K4_dffs[15]);


--Y5L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:4:sm1|p_match_out~201
--operation mode is normal

Y5L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[4], K4_dffs[14], K4_dffs[13], K4_dffs[12]);


--Y4L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:3:sm1|p_match_out~201
--operation mode is normal

Y4L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[3], K4_dffs[11], K4_dffs[10], K4_dffs[9]);


--Y3L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:2:sm1|p_match_out~201
--operation mode is normal

Y3L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[2], K4_dffs[8], K4_dffs[7], K4_dffs[6]);


--Y2L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:1:sm1|p_match_out~201
--operation mode is normal

Y2L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[1], K4_dffs[5], K4_dffs[4], K4_dffs[3]);


--Y1L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|p_match_out~201
--operation mode is normal

Y1L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[0], K4_dffs[2], K4_dffs[1], K4_dffs[0]);


--Y31L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:12:sm1|p_match_out~225
--operation mode is normal

Y31L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[12], K4_dffs[38], K4_dffs[37], K4_dffs[36]);


--Y72L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_mbpmg:\trigger_in_trigger_module_enabled_gen:trigger_in_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|p_match_out~206
--operation mode is normal

Y72L3 = AMPP_FUNCTION(B1_trigger_in_reg, K3_dffs[22], K3_dffs[21], K3_dffs[20]);


--Y42L2 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:10:sm1|p_match_out~225
--operation mode is normal

Y42L2 = AMPP_FUNCTION(B1_acq_trigger_in_reg[12], K4_dffs[71], K4_dffs[69], K4_dffs[70]);


--Y52L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:11:sm1|p_match_out~227
--operation mode is normal

Y52L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[11], K4_dffs[74], K4_dffs[73], K4_dffs[72]);


--Y32L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:9:sm1|p_match_out~227
--operation mode is normal

Y32L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[9], K4_dffs[68], K4_dffs[67], K4_dffs[66]);


--Y22L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:8:sm1|p_match_out~227
--operation mode is normal

Y22L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[8], K4_dffs[65], K4_dffs[64], K4_dffs[63]);


--Y12L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:7:sm1|p_match_out~227
--operation mode is normal

Y12L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[7], K4_dffs[62], K4_dffs[61], K4_dffs[60]);


--Y02L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:6:sm1|p_match_out~227
--operation mode is normal

Y02L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[6], K4_dffs[59], K4_dffs[58], K4_dffs[57]);


--Y91L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:5:sm1|p_match_out~227
--operation mode is normal

Y91L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[5], K4_dffs[56], K4_dffs[55], K4_dffs[54]);


--Y81L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:4:sm1|p_match_out~227
--operation mode is normal

Y81L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[4], K4_dffs[53], K4_dffs[52], K4_dffs[51]);


--Y71L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:3:sm1|p_match_out~227
--operation mode is normal

Y71L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[3], K4_dffs[50], K4_dffs[49], K4_dffs[48]);


--Y61L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:2:sm1|p_match_out~227
--operation mode is normal

Y61L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[2], K4_dffs[47], K4_dffs[46], K4_dffs[45]);


--Y51L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:1:sm1|p_match_out~227
--operation mode is normal

Y51L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[1], K4_dffs[44], K4_dffs[43], K4_dffs[42]);


--Y41L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|p_match_out~227
--operation mode is normal

Y41L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[0], K4_dffs[41], K4_dffs[40], K4_dffs[39]);


--Y62L3 is sld_signaltap:FNGDA8_signaltap2|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:1:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:12:sm1|p_match_out~230
--operation mode is normal

Y62L3 = AMPP_FUNCTION(B1_acq_trigger_in_reg[12], K4_dffs[77], K4_dffs[76], K4_dffs[75]);


--~GND is ~GND
--operation mode is normal

~GND = GND;


--setab is setab
--operation mode is input

setab = INPUT();


--a[0] is a[0]
--operation mode is input

a[0] = INPUT();


--a[2] is a[2]
--operation mode is input

a[2] = INPUT();


--a[1] is a[1]
--operation mode is input

a[1] = INPUT();


--freq[15] is freq[15]
--operation mode is input

freq[15] = INPUT();


--sweep is sweep
--operation mode is input

sweep = INPUT();


--clock is clock
--operation mode is input

clock = INPUT();


--frqm[0] is frqm[0]
--operation mode is input

frqm[0] = INPUT();


--frqm[1] is frqm[1]
--operation mode is input

frqm[1] = INPUT();





--freq[14] is freq[14]
--operation mode is input

freq[14] = INPUT();


--freq[10] is freq[10]
--operation mode is input

freq[10] = INPUT();


--freq[11] is freq[11]
--operation mode is input

freq[11] = INPUT();


--freq[12] is freq[12]
--operation mode is input

freq[12] = INPUT();


--freq[13] is freq[13]
--operation mode is input

freq[13] = INPUT();


--freq[9] is freq[9]
--operation mode is input

freq[9] = INPUT();


--freq[8] is freq[8]
--operation mode is input

freq[8] = INPUT();


--freq[7] is freq[7]
--operation mode is input

freq[7] = INPUT();


--freq[6] is freq[6]
--operation mode is input

freq[6] = INPUT();


--freq[5] is freq[5]
--operation mode is input

freq[5] = INPUT();


--freq[4] is freq[4]
--operation mode is input

freq[4] = INPUT();


--freq[3] is freq[3]
--operation mode is input

freq[3] = INPUT();


--freq[2] is freq[2]
--operation mode is input

freq[2] = INPUT();


--freq[1] is freq[1]
--operation mode is input

freq[1] = INPUT();


--freq[0] is freq[0]
--operation mode is input

freq[0] = INPUT();


--fout is fout
--operation mode is output

fout = OUTPUT(A1L65);


--wr is wr
--operation mode is output

wr = OUTPUT(!strb);


--selab is selab
--operation mode is output

selab = OUTPUT(setab);


--cs is cs
--operation mode is output

cs = OUTPUT(!A1L85);


--pdo[0] is pdo[0]
--operation mode is output

pdo[0] = OUTPUT(HB1_q_a[0]);


--pdo[1] is pdo[1]
--operation mode is output

pdo[1] = OUTPUT(HB1_q_a[1]);


--pdo[2] is pdo[2]
--operation mode is output

pdo[2] = OUTPUT(HB1_q_a[2]);


--pdo[3] is pdo[3]
--operation mode is output

pdo[3] = OUTPUT(HB1_q_a[3]);


--pdo[4] is pdo[4]
--operation mode is output

pdo[4] = OUTPUT(HB1_q_a[4]);


--pdo[5] is pdo[5]
--operation mode is output

pdo[5] = OUTPUT(HB1_q_a[5]);


--pdo[6] is pdo[6]
--operation mode is output

pdo[6] = OUTPUT(HB1_q_a[6]);


--pdo[7] is pdo[7]
--operation mode is output

pdo[7] = OUTPUT(HB1_q_a[7]);



--B1L02 is sld_signaltap:FNGDA8_signaltap2|acq_data_in_pipe_reg[2][10]~100
--operation mode is normal

B1L02 = AMPP_FUNCTION(B1_acq_data_in_pipe_reg[2][10]);


